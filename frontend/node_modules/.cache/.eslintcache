[{"D:\\JoynetSocialNetwork\\do-an-fe\\src\\index.js":"1","D:\\JoynetSocialNetwork\\do-an-fe\\src\\App.js":"2","D:\\JoynetSocialNetwork\\do-an-fe\\src\\reportWebVitals.js":"3","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\store.js":"4","D:\\JoynetSocialNetwork\\do-an-fe\\src\\SocketClient.js":"5","D:\\JoynetSocialNetwork\\do-an-fe\\src\\customRouter\\PrivateRouter.js":"6","D:\\JoynetSocialNetwork\\do-an-fe\\src\\customRouter\\PageRender.js":"7","D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\register.js":"8","D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\home.js":"9","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\globalTypes.js":"10","D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\reports.js":"11","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\authAction.js":"12","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\reportAction.js":"13","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\notifyAction.js":"14","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\header\\Header.js":"15","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\alert\\LoadingHome.js":"16","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\postAction.js":"17","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\suggestionsAction.js":"18","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\StatusModal.js":"19","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\alert\\Alert.js":"20","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\message\\CallModal.js":"21","D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\login.js":"22","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\index.js":"23","D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\message\\index.js":"24","D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\message\\[id].js":"25","D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\discover.js":"26","D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\post\\[id].js":"27","D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\profile\\[id].js":"28","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\messageAction.js":"29","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\NotFound.js":"30","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\header\\Menu.js":"31","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\header\\Search.js":"32","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\Icons.js":"33","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\Avatar.js":"34","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\alert\\Toast.js":"35","D:\\JoynetSocialNetwork\\do-an-fe\\src\\utils\\fetchData.js":"36","D:\\JoynetSocialNetwork\\do-an-fe\\src\\utils\\mediaShow.js":"37","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\LeftSideBar.js":"38","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\Status.js":"39","D:\\JoynetSocialNetwork\\do-an-fe\\src\\utils\\imageUpload.js":"40","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\themeReducer.js":"41","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\alertReducer.js":"42","D:\\JoynetSocialNetwork\\do-an-fe\\src\\utils\\valid.js":"43","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\profileReducer.js":"44","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\modalReducer.js":"45","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\suggestionsReducer.js":"46","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\RightSideBar.js":"47","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\Posts.js":"48","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\authReducer.js":"49","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\detailPostReducer.js":"50","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\postReducer.js":"51","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\socketReducer.js":"52","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\statusReducer.js":"53","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\messageReducer.js":"54","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\notifyReducer.js":"55","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\callReducer.js":"56","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\peerReducer.js":"57","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\discoverReducer.js":"58","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\reportReducer.js":"59","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\onlineReducer.js":"60","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\message\\RightSide.js":"61","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\message\\LeftSide.js":"62","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\LoadMoreBtn.js":"63","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\PostCard.js":"64","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\PostThumb.js":"65","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\discoverAction.js":"66","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\profileAction.js":"67","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\profile\\Saved.js":"68","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\profile\\Info.js":"69","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\profile\\Posts.js":"70","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\NotifyModal.js":"71","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\UserCard.js":"72","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\FollowBtn.js":"73","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\UserCardBig.js":"74","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\Comments.js":"75","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\InputComment.js":"76","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\post_card\\CardFooter.js":"77","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\post_card\\CardHeader.js":"78","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\post_card\\CardBody.js":"79","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\profile\\Followers.js":"80","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\profile\\EditProfile.js":"81","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\profile\\Following.js":"82","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\commentAction.js":"83","D:\\JoynetSocialNetwork\\do-an-fe\\src\\utils\\config.js":"84","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\LikeButton.js":"85","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\ShareModal.js":"86","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\ReportForm.js":"87","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\Carousel.js":"88","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\comments\\CommentDisplay.js":"89","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\comments\\CommentCard.js":"90","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\comments\\CommentMenu.js":"91","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\message\\MsgDisplay.js":"92","D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\users.js":"93","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\Search.js":"94","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\StyleBadge.js":"95","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\UserItem.js":"96","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\message\\ScrollableChat.js":"97","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\message\\UpdateGroupChat.js":"98","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\message\\GroupChat.js":"99","D:\\JoynetSocialNetwork\\do-an-fe\\src\\utils\\chatLogic.js":"100","D:\\JoynetSocialNetwork\\do-an-fe\\src\\hooks\\useDebounce.js":"101","D:\\JoynetSocialNetwork\\do-an-fe\\src\\hooks\\useIntersectionObserver.js":"102","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\skeleton\\UserCard.js":"103"},{"size":643,"mtime":1682930600034,"results":"104","hashOfConfig":"105"},{"size":3151,"mtime":1684664747862,"results":"106","hashOfConfig":"105"},{"size":375,"mtime":1682768584708,"results":"107","hashOfConfig":"105"},{"size":512,"mtime":1682768584708,"results":"108","hashOfConfig":"105"},{"size":5652,"mtime":1684666243787,"results":"109","hashOfConfig":"105"},{"size":270,"mtime":1683732590952,"results":"110","hashOfConfig":"105"},{"size":750,"mtime":1682768584701,"results":"111","hashOfConfig":"105"},{"size":6571,"mtime":1684816272371,"results":"112","hashOfConfig":"105"},{"size":1198,"mtime":1684666243812,"results":"113","hashOfConfig":"105"},{"size":590,"mtime":1682877655457,"results":"114","hashOfConfig":"105"},{"size":10511,"mtime":1684669190361,"results":"115","hashOfConfig":"105"},{"size":3019,"mtime":1682768584704,"results":"116","hashOfConfig":"105"},{"size":3726,"mtime":1684666798232,"results":"117","hashOfConfig":"105"},{"size":2321,"mtime":1684666243823,"results":"118","hashOfConfig":"105"},{"size":694,"mtime":1682768584696,"results":"119","hashOfConfig":"105"},{"size":703,"mtime":1682768584695,"results":"120","hashOfConfig":"105"},{"size":8094,"mtime":1684660834131,"results":"121","hashOfConfig":"105"},{"size":707,"mtime":1682768584706,"results":"122","hashOfConfig":"105"},{"size":8741,"mtime":1683732590950,"results":"123","hashOfConfig":"105"},{"size":982,"mtime":1682768584695,"results":"124","hashOfConfig":"105"},{"size":14367,"mtime":1684666243802,"results":"125","hashOfConfig":"105"},{"size":2767,"mtime":1684810924858,"results":"126","hashOfConfig":"105"},{"size":963,"mtime":1683732590954,"results":"127","hashOfConfig":"105"},{"size":1175,"mtime":1684666243814,"results":"128","hashOfConfig":"105"},{"size":529,"mtime":1683133609102,"results":"129","hashOfConfig":"105"},{"size":1716,"mtime":1683178531170,"results":"130","hashOfConfig":"105"},{"size":1272,"mtime":1683178284148,"results":"131","hashOfConfig":"105"},{"size":2052,"mtime":1684666243818,"results":"132","hashOfConfig":"105"},{"size":3683,"mtime":1684775443932,"results":"133","hashOfConfig":"105"},{"size":416,"mtime":1682768584693,"results":"134","hashOfConfig":"105"},{"size":4484,"mtime":1685094718857,"results":"135","hashOfConfig":"105"},{"size":3537,"mtime":1683174881480,"results":"136","hashOfConfig":"105"},{"size":1249,"mtime":1682768584693,"results":"137","hashOfConfig":"105"},{"size":332,"mtime":1682768584692,"results":"138","hashOfConfig":"105"},{"size":796,"mtime":1682768584695,"results":"139","hashOfConfig":"105"},{"size":938,"mtime":1682768584711,"results":"140","hashOfConfig":"105"},{"size":413,"mtime":1682768584712,"results":"141","hashOfConfig":"105"},{"size":606,"mtime":1683566130441,"results":"142","hashOfConfig":"105"},{"size":710,"mtime":1683732590951,"results":"143","hashOfConfig":"105"},{"size":1071,"mtime":1682768584712,"results":"144","hashOfConfig":"105"},{"size":326,"mtime":1682768584708,"results":"145","hashOfConfig":"105"},{"size":325,"mtime":1682768584706,"results":"146","hashOfConfig":"105"},{"size":1963,"mtime":1684816005221,"results":"147","hashOfConfig":"105"},{"size":5394,"mtime":1682768584707,"results":"148","hashOfConfig":"105"},{"size":326,"mtime":1682768584707,"results":"149","hashOfConfig":"105"},{"size":603,"mtime":1682768584708,"results":"150","hashOfConfig":"105"},{"size":2073,"mtime":1683174764560,"results":"151","hashOfConfig":"105"},{"size":1382,"mtime":1683178526654,"results":"152","hashOfConfig":"105"},{"size":320,"mtime":1682768584706,"results":"153","hashOfConfig":"105"},{"size":469,"mtime":1682768584706,"results":"154","hashOfConfig":"105"},{"size":1278,"mtime":1682768584707,"results":"155","hashOfConfig":"105"},{"size":291,"mtime":1682768584707,"results":"156","hashOfConfig":"105"},{"size":294,"mtime":1682768584708,"results":"157","hashOfConfig":"105"},{"size":3521,"mtime":1684775429175,"results":"158","hashOfConfig":"105"},{"size":1392,"mtime":1682768584707,"results":"159","hashOfConfig":"105"},{"size":288,"mtime":1682848404097,"results":"160","hashOfConfig":"105"},{"size":290,"mtime":1682877713148,"results":"161","hashOfConfig":"105"},{"size":975,"mtime":1682768584706,"results":"162","hashOfConfig":"105"},{"size":1428,"mtime":1684666747803,"results":"163","hashOfConfig":"105"},{"size":406,"mtime":1682794005869,"results":"164","hashOfConfig":"105"},{"size":8726,"mtime":1684777201618,"results":"165","hashOfConfig":"105"},{"size":8741,"mtime":1684848729594,"results":"166","hashOfConfig":"105"},{"size":486,"mtime":1682768584693,"results":"167","hashOfConfig":"105"},{"size":636,"mtime":1682768584694,"results":"168","hashOfConfig":"105"},{"size":1146,"mtime":1684666243790,"results":"169","hashOfConfig":"105"},{"size":723,"mtime":1682768584704,"results":"170","hashOfConfig":"105"},{"size":5426,"mtime":1684816428824,"results":"171","hashOfConfig":"105"},{"size":1758,"mtime":1683178535935,"results":"172","hashOfConfig":"105"},{"size":4819,"mtime":1684811121804,"results":"173","hashOfConfig":"105"},{"size":1516,"mtime":1683178539635,"results":"174","hashOfConfig":"105"},{"size":4539,"mtime":1683174950929,"results":"175","hashOfConfig":"105"},{"size":3127,"mtime":1682768584695,"results":"176","hashOfConfig":"105"},{"size":1657,"mtime":1684811242856,"results":"177","hashOfConfig":"105"},{"size":3502,"mtime":1683175259615,"results":"178","hashOfConfig":"105"},{"size":1737,"mtime":1684666243794,"results":"179","hashOfConfig":"105"},{"size":2085,"mtime":1685094215444,"results":"180","hashOfConfig":"105"},{"size":3775,"mtime":1684666243797,"results":"181","hashOfConfig":"105"},{"size":3568,"mtime":1684666243798,"results":"182","hashOfConfig":"105"},{"size":1240,"mtime":1682768584698,"results":"183","hashOfConfig":"105"},{"size":1269,"mtime":1682768584700,"results":"184","hashOfConfig":"105"},{"size":4915,"mtime":1684817180890,"results":"185","hashOfConfig":"105"},{"size":1152,"mtime":1682768584700,"results":"186","hashOfConfig":"105"},{"size":4979,"mtime":1682768584704,"results":"187","hashOfConfig":"105"},{"size":47,"mtime":1682768584711,"results":"188","hashOfConfig":"105"},{"size":582,"mtime":1683173453175,"results":"189","hashOfConfig":"105"},{"size":1353,"mtime":1682768584694,"results":"190","hashOfConfig":"105"},{"size":2414,"mtime":1684666243795,"results":"191","hashOfConfig":"105"},{"size":2255,"mtime":1682768584693,"results":"192","hashOfConfig":"105"},{"size":1714,"mtime":1684666243796,"results":"193","hashOfConfig":"105"},{"size":6300,"mtime":1684666243795,"results":"194","hashOfConfig":"105"},{"size":2268,"mtime":1684666243796,"results":"195","hashOfConfig":"105"},{"size":2196,"mtime":1682768584699,"results":"196","hashOfConfig":"105"},{"size":2863,"mtime":1684666243821,"results":"197","hashOfConfig":"105"},{"size":1237,"mtime":1684666243791,"results":"198","hashOfConfig":"105"},{"size":1131,"mtime":1684666243791,"results":"199","hashOfConfig":"105"},{"size":636,"mtime":1684666243791,"results":"200","hashOfConfig":"105"},{"size":2471,"mtime":1684776355759,"results":"201","hashOfConfig":"105"},{"size":8387,"mtime":1684666243807,"results":"202","hashOfConfig":"105"},{"size":6550,"mtime":1684666243803,"results":"203","hashOfConfig":"105"},{"size":1480,"mtime":1684666243827,"results":"204","hashOfConfig":"105"},{"size":387,"mtime":1684666243810,"results":"205","hashOfConfig":"105"},{"size":805,"mtime":1684666243810,"results":"206","hashOfConfig":"105"},{"size":601,"mtime":1684666243809,"results":"207","hashOfConfig":"105"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},"1svggm3",{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"210"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"210"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"210"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"210"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"210"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"210"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"210"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"210"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"210"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"210"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"210"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"210"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"210"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"210"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"210"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"210"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"409"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"210"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"210"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"210"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"210"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"210"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"210"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},"D:\\JoynetSocialNetwork\\do-an-fe\\src\\index.js",[],["438","439"],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\App.js",["440","441"],"import { useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport PageRender from './customRouter/PageRender'\r\nimport PrivateRouter from './customRouter/PrivateRouter'\r\n\r\nimport Home from './pages/home'\r\nimport Login from './pages/login'\r\nimport Register from './pages/register'\r\nimport Reports from './pages/reports'\r\n\r\nimport Alert from './components/alert/Alert'\r\nimport Header from './components/header/Header'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { refreshToken } from './redux/actions/authAction'\r\nimport StatusModal from './components/StatusModal'\r\nimport { GLOBALTYPES } from './redux/actions/globalTypes'\r\nimport { getPosts } from './redux/actions/postAction'\r\nimport { getSuggestions } from './redux/actions/suggestionsAction'\r\nimport io from 'socket.io-client'\r\nimport SocketClient from './SocketClient'\r\nimport { getNotifies } from './redux/actions/notifyAction'\r\nimport LoadingHome from './components/alert/LoadingHome'\r\nimport CallModal from './components/message/CallModal'\r\nimport Peer from 'peerjs'\r\nimport { getAllReports } from './redux/actions/reportAction'\r\n\r\nfunction App() {\r\n  const { auth, status, modal, call } = useSelector(state => state)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(refreshToken())\r\n    const socket = io()\r\n    // socket.emit('clientConnected', socket.id)\r\n    dispatch({ type: GLOBALTYPES.SOCKET, payload: socket })\r\n    return () => socket.close()\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (auth.token) {\r\n      dispatch(getPosts(auth.token))\r\n      dispatch(getSuggestions(auth.token))\r\n      dispatch(getNotifies(auth.token))\r\n      dispatch(getAllReports(auth.token))\r\n    }\r\n  }, [dispatch, auth.token])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (!(\"Notification\" in window)) {\r\n      alert(\"This browser does not support desktop notification\");\r\n    }\r\n    else if (Notification.permission === \"granted\") { }\r\n    else if (Notification.permission !== \"denied\") {\r\n      Notification.requestPermission().then(function (permission) {\r\n        if (permission === \"granted\") { }\r\n      });\r\n    }\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    const newPeer = new Peer(undefined, {\r\n      // path: '/', secure: true\r\n      host: '/', port: '3001'\r\n    })\r\n\r\n    dispatch({ type: GLOBALTYPES.PEER, payload: newPeer })\r\n  }, [dispatch])\r\n\r\n\r\n  return (\r\n\r\n    <Router>\r\n      <Alert />\r\n      {/* <Loading/> */}\r\n      {/* <LoadingHome /> */}\r\n      <input type=\"checkbox\" id=\"theme\" />\r\n      <div className={`App ${(status || modal) && 'mode'}`}>\r\n        {/* <div className=\"main\"> */}\r\n        {auth.token && <Header />}\r\n        {status && <StatusModal />}\r\n        {auth.token && <SocketClient />}\r\n        {call && <CallModal />}\r\n\r\n\r\n        <Route exact path=\"/\" component={auth.token ? Home : Login} />\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <PrivateRouter exact path=\"/:page\" component={PageRender} />\r\n        <PrivateRouter exact path=\"/:page/:id\" component={PageRender} />\r\n\r\n\r\n        {/* </div> */}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\JoynetSocialNetwork\\do-an-fe\\src\\reportWebVitals.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\store.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\SocketClient.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\customRouter\\PrivateRouter.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\customRouter\\PageRender.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\register.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\home.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\globalTypes.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\reports.js",["442","443"],"// import React, { useEffect, useState } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { Redirect } from 'react-router-dom'\r\n// import { deleteReport, getAllReports } from '../redux/actions/reportAction'\r\n// import moment from 'moment'\r\n// function Report() {\r\n//     const { auth, report, socket } = useSelector(state => state)\r\n//     const dispatch = useDispatch()\r\n//     const [load, setLoad] = useState(false)\r\n\r\n//     useEffect(() => {\r\n//         // if (!report.firstLoad) {\r\n//         dispatch(getAllReports(auth.token))\r\n//         // }\r\n//     }, [dispatch, auth.token])\r\n\r\n//     const handleDeleteReport = (report) => {\r\n//         if (window.confirm('Do you want to delete?')) {\r\n//             dispatch(deleteReport({ report, auth, socket }))\r\n//         }\r\n//     }\r\n//     // console.log(report.reports)\r\n//     if (auth.user.role !== 'admin') {\r\n//         return <Redirect to=\"/\" />\r\n//     }\r\n\r\n\r\n\r\n//     return (\r\n//         <div className='mt-70'>\r\n//             <h1 className='text-center123 text-justify'>Báo cáo bài viết</h1>\r\n\r\n//             <div style={{ overflowX: \"auto\" }}>\r\n//                 <table className=\"customers\">\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th>Thứ tự</th>\r\n//                             <th>Người báo cáo</th>\r\n//                             <th>Người chủ bài viết</th>\r\n//                             <th>Link bài viết</th>\r\n//                             <th>Nội dung báo cáo</th>\r\n//                             <th>Thời gian báo cáo</th>\r\n//                             <th>Hành động</th>\r\n\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {report.reports.map((report, index) => (\r\n\r\n//                             <tr key={report._id}>\r\n//                                 <td>{index + 1}</td>\r\n//                                 <td>{report.reporter.username}</td>\r\n//                                 <td>{report.user.username}</td>\r\n//                                 <td> <a href={`http://localhost:3000/post/${report.post._id}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//                                     {report.post._id}\r\n//                                 </a></td>\r\n//                                 <td>{report.reason}</td>\r\n//                                 <td> {moment(report.createdAt).fromNow()}</td>\r\n\r\n//                                 <td>\r\n//                                     <i className=\"fas fa-trash text-danger\"\r\n//                                         onClick={() => handleDeleteReport(report._id)}\r\n//                                     />\r\n//                                     &nbsp; &nbsp;&nbsp;\r\n//                                     <i className=\"fas fa-trash text-primary\"\r\n//                                         onClick={() => handleDeleteReport(report._id)}\r\n//                                     />\r\n//                                 </td>\r\n\r\n//                             </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Report;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { deleteReport, deleteReportOnly, getAllReports } from '../redux/actions/reportAction'\r\nimport moment from 'moment'\r\nfunction Report() {\r\n    const { auth, report, socket } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n    const [load, setLoad] = useState(false)\r\n    const [isRead, setIsRead] = useState(false)\r\n    useEffect(() => {\r\n        // if (!report.firstLoad) {\r\n        dispatch(getAllReports(auth.token))\r\n        // }\r\n    }, [dispatch, auth.token])\r\n\r\n    const handleDeleteReport = (report) => {\r\n        if (window.confirm('Do you want to delete the post?')) {\r\n            dispatch(deleteReport({ report, auth, socket }))\r\n        }\r\n    }\r\n    const handleDeleteReportOnly = (report) => {\r\n        if (window.confirm('Do you want to delete the report?')) {\r\n            dispatch(deleteReportOnly({ report, auth, socket }))\r\n        }\r\n    }\r\n    // console.log(report.reports)\r\n    if (auth.user.role !== 'admin') {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const handleIsRead = async () => {\r\n        if (load) return;\r\n        setIsRead(false)\r\n        setLoad(true)\r\n        // await dispatch(follow({ users: profile.users, user, auth, socket }))\r\n        setLoad(false)\r\n    }\r\n    const handleUnIsRead = async () => {\r\n        if (load) return;\r\n        setIsRead(true)\r\n        setLoad(true)\r\n        // await dispatch(unfollow({ users: profile.users, user, auth, socket }))\r\n        setLoad(false)\r\n    }\r\n\r\n    return (\r\n        <div className='mt-70'>\r\n            <h1>Báo cáo các bài viết</h1>\r\n\r\n            <div style={{ overflowX: \"auto\" }}>\r\n                <table className=\"customers\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Thứ tự</th>\r\n                            <th>Người báo cáo</th>\r\n                            <th>Người chủ bài viết</th>\r\n                            <th>Link bài viết</th>\r\n                            <th>Nội dung báo cáo</th>\r\n                            <th>Thời gian báo cáo</th>\r\n                            <th>Hành động</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {isRead ?\r\n                            report.reports.map((report, index) => (\r\n\r\n                                <tr key={report._id}>\r\n                                    <td style={{ color: 'red' }}>{index + 1}</td>\r\n                                    <td style={{ color: 'red' }}>{report.reporter.username}</td>\r\n                                    <td style={{ color: 'red' }}>{report.user.username}</td>\r\n                                    <td style={{ color: 'red' }}> <a style={{ color: 'red' }} href={`http://localhost:3000/post/${report.post._id}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        {report.post._id}\r\n                                    </a></td>\r\n                                    <td style={{ color: 'red' }}>{report.reason}</td>\r\n                                    <td style={{ color: 'red' }}> {moment(report.createdAt).fromNow()}</td>\r\n\r\n                                    <td>\r\n                                        <i className=\"fas fa-trash text-danger\"\r\n                                            // onClick={() => handleDeleteReport(report._id)}\r\n                                            onClick={() => handleDeleteReport(report)}\r\n                                        />\r\n\r\n                                        <i className=\"fas fa-trash text-primary\"\r\n                                            // onClick={() => handleDeleteReport(report._id)}\r\n                                            onClick={() => handleDeleteReportOnly(report)}\r\n                                        />\r\n\r\n                                        {/* {\r\n                                            isRead\r\n                                                ?\r\n                                                <i className=\"fas fa-eye text-primary\"\r\n                                                    onClick={handleIsRead}\r\n\r\n                                                />\r\n                                                :\r\n                                                <i className=\"fas fa-eye-slash text-primary\"\r\n                                                    onClick={handleUnIsRead}\r\n\r\n                                                />\r\n\r\n                                        } */}\r\n\r\n\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            )) : report.reports.map((report, index) => (\r\n\r\n                                <tr key={report._id}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{report.reporter.username}</td>\r\n                                    <td>{report.user.username}</td>\r\n                                    <td> <a href={`http://localhost:3000/post/${report.post._id}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        {report.post._id}\r\n                                    </a></td>\r\n                                    <td>{report.reason}</td>\r\n                                    <td> {moment(report.createdAt).fromNow()}</td>\r\n\r\n                                    <td>\r\n                                        <i className=\"fas fa-trash text-danger\"\r\n                                            // onClick={() => handleDeleteReport(report._id)}\r\n                                            onClick={() => handleDeleteReport(report)}\r\n                                        />\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        <i className=\"fas fa-trash text-primary\"\r\n                                            // onClick={() => handleDeleteReport(report._id)}\r\n                                            onClick={() => handleDeleteReportOnly(report)}\r\n                                        />\r\n                                        {/* \r\n                                        {\r\n                                            isRead\r\n                                                ?\r\n                                                <i className=\"fas fa-eye text-primary\"\r\n                                                    onClick={handleIsRead}\r\n\r\n                                                />\r\n                                                :\r\n                                                <i className=\"fas fa-eye-slash text-primary\"\r\n                                                    onClick={handleUnIsRead}\r\n\r\n                                                />\r\n\r\n                                        } */}\r\n\r\n\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Report;","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\authAction.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\reportAction.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\notifyAction.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\header\\Header.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\alert\\LoadingHome.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\postAction.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\suggestionsAction.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\StatusModal.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\alert\\Alert.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\message\\CallModal.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\login.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\index.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\message\\index.js",["444"],"import Box from '@mui/material/Box'\r\nimport Divider from '@mui/material/Divider'\r\nimport Stack from '@mui/material/Stack'\r\nimport useTheme from '@mui/material/styles/useTheme'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport LeftSide from '../../components/message/LeftSide'\r\nimport RightSide from '../../components/message/RightSide'\r\n\r\nconst Message = () => {\r\n    const { message } = useSelector(state => state)\r\n\r\n    return (\r\n        <Stack direction='row' sx={{ background: '#fff', marginTop: '100px', mx: 3, boxShadow: 2, borderRadius: 1, height: '80vh' }}>\r\n            <Stack sx={{ flexBasis: '30%' }}>\r\n                <LeftSide />\r\n            </Stack>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            {message.selectedChat ?\r\n                <RightSide /> :\r\n                <Box sx={{ flex: 1 }}>\r\n                    <div className=\"d-flex justify-content-center \r\n                align-items-center flex-column h-100\">\r\n                        <h4>Click on a user to start chatting</h4>\r\n                    </div>\r\n                </Box>\r\n            }\r\n        </Stack>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\message\\[id].js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\discover.js",["445","446"],"import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DISCOVER_TYPES, getDiscoverPosts } from '../redux/actions/discoverAction';\r\nimport LoadIcon from '../images/loading.gif'\r\nimport PostThumb from '../components/PostThumb'\r\nimport LoadMoreBtn from '../components/LoadMoreBtn';\r\nimport { getDataAPI } from '../utils/fetchData';\r\n\r\nfunction Discover() {\r\n    const { auth, discover } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n    const [load, setLoad] = useState(false)\r\n    useEffect(() => {\r\n        if (!discover.firstLoad) {\r\n            dispatch(getDiscoverPosts(auth.token))\r\n        }\r\n    }, [dispatch, auth.token, discover.firstLoad])\r\n\r\n    const handleLoadMore = async () => {\r\n        setLoad(true)\r\n        const res = await getDataAPI(`post_discover?num=${discover.page * 3}`, auth.token)\r\n        dispatch({ type: DISCOVER_TYPES.UPDATE_POST, payload: res.data })\r\n        setLoad(false)\r\n    }\r\n\r\n    return (\r\n        <div className='mt-70 main'>\r\n            {\r\n                discover.loading\r\n                    ? <img src={LoadIcon} alt=\"loading\" className=\"d-block mx-auto my-4\" />\r\n                    : <div className='mt-70'> <PostThumb posts={discover.posts} result={discover.result} /></div>\r\n            }\r\n\r\n            {\r\n                load && <img src={LoadIcon} alt=\"loading\" className=\"d-block mx-auto\" />\r\n            }\r\n\r\n            {/* {\r\n                !discover.loading &&\r\n                <LoadMoreBtn result={discover.result} page={discover.page}\r\n                    load={load} handleLoadMore={handleLoadMore} />\r\n            } */}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discover;","D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\post\\[id].js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\profile\\[id].js",["447"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport Info from '../../components/profile/Info'\r\nimport Posts from '../../components/profile/Posts'\r\nimport Saved from '../../components/profile/Saved'\r\nimport LoadIcon from '../../images/loading.gif'\r\nimport { getProfileUsers } from '../../redux/actions/profileAction'\r\nconst Profile = () => {\r\n    const { profile, auth } = useSelector(state => state)\r\n    const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n    const [saveTab, setSaveTab] = useState(false)\r\n    useEffect(() => {\r\n        // window.scrollTo(0);\r\n        //nếu item khác id trên thanh url hiện tại thì sẽ chuyển hướng\r\n        if (profile.ids.every(item => item !== id)) {\r\n            dispatch(getProfileUsers({ id, auth }))\r\n        }\r\n\r\n    }, [id, auth, dispatch])\r\n\r\n    return (\r\n        <div className='profile mt-70 main' >\r\n            <div className='mt-70'>\r\n                <Info auth={auth} profile={profile} dispatch={dispatch} id={id} />\r\n            </div>\r\n\r\n\r\n            {\r\n                auth.user._id === id &&\r\n                <div className=\"profile_tab \">\r\n                    <button className={saveTab ? '' : 'active'} onClick={() => setSaveTab(false)}>Bài viết</button>\r\n                    <button className={saveTab ? 'active' : ''} onClick={() => setSaveTab(true)}>Bài viết đã lưu</button>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                profile.loading\r\n                    ? <img className=\"d-block mx-auto\" src={LoadIcon} alt=\"loading\" />\r\n                    : <>\r\n                        {\r\n                            saveTab\r\n                                ? <Saved auth={auth} dispatch={dispatch} />\r\n                                : <Posts auth={auth} profile={profile} dispatch={dispatch} id={id} />\r\n                        }\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile\r\n","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\messageAction.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\NotFound.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\header\\Menu.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\header\\Search.js",["448","449"],"import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getDataAPI } from '../../utils/fetchData'\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes'\r\nimport UserCard from '../UserCard'\r\nimport LoadIcon from '../../images/loading.gif'\r\n// import { AudioOutlined } from '@ant-design/icons';\r\nimport { Input, Space } from 'antd';\r\n\r\nconst { Search: SearchAntd } = Input;\r\n\r\nconst Search = () => {\r\n    const [search, setSearch] = useState('')\r\n    const [users, setUsers] = useState([])\r\n\r\n    const { auth } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n    const [load, setLoad] = useState(false)\r\n\r\n\r\n    const handleSearch = async (e) => {\r\n        e.preventDefault()\r\n        if (!search) return;\r\n\r\n        try {\r\n            setLoad(true)\r\n            const res = await getDataAPI(`search?username=${search}`, auth.token)\r\n            setUsers(res.data.users)\r\n            setLoad(false)\r\n        } catch (err) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT, payload: { error: err.response.data.msg }\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setSearch('')\r\n        setUsers([])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className=\"search_form\" onSubmit={handleSearch}>\r\n                <Space direction=\"vertical\">\r\n                    <SearchAntd\r\n                        placeholder=\"Tìm kiếm người dùng\"\r\n                        allowClear\r\n                        enterButton=\"Tìm kiếm\"\r\n                        size=\"large\"\r\n                        value={search}\r\n                        onChange={e => setSearch(e.target.value.toLowerCase().replace(/ /g, ''))}\r\n\r\n                    />\r\n                </Space>\r\n\r\n                <div className=\"users\">\r\n                    {\r\n                        search && users.map(user => (user._id !== auth.user._id ?\r\n                            <UserCard\r\n                                key={user._id}\r\n                                user={user}\r\n                                border=\"border\"\r\n                                handleClose={handleClose}\r\n                            /> : null\r\n                        )\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                {/* <input type=\"text\" name=\"search\" value={search} id=\"search\" title=\"Enter to Search\"\r\n                onChange={e => setSearch(e.target.value.toLowerCase().replace(/ /g, ''))} /> */}\r\n\r\n                {/* <div className=\"search_icon\" style={{ opacity: search ? 0 : 0.3 }}>\r\n                <span className=\"material-icons\">search</span>\r\n                <span>Enter to Search</span>\r\n            </div> */}\r\n\r\n                {/* <div className=\"close_search\" onClick={handleClose}\r\n                style={{ opacity: users.length === 0 ? 0 : 1 }} >\r\n                &times;\r\n            </div> */}\r\n\r\n                {/* <button type=\"submit\" style={{ display: 'none' }}>Search</button> */}\r\n\r\n\r\n\r\n                {/* <div className=\"users\">\r\n                {\r\n                    search && users.map(user => (\r\n                        <UserCard\r\n                            key={user._id}\r\n                            user={user}\r\n                            border=\"border\"\r\n                            handleClose={handleClose}\r\n                        />\r\n                    ))\r\n                }\r\n            </div> */}\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\Icons.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\Avatar.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\alert\\Toast.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\utils\\fetchData.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\utils\\mediaShow.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\LeftSideBar.js",["450","451","452","453","454","455"],"import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport UserCard from '../UserCard'\r\nimport FollowBtn from '../FollowBtn'\r\nimport LoadIcon from '../../images/loading.gif'\r\nimport { getSuggestions } from '../../redux/actions/suggestionsAction'\r\nimport UserCardBig from '../UserCardBig'\r\n\r\nconst LeftSideBar = () => {\r\n    const { auth, suggestions } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className=\"mt-3\">\r\n            <UserCardBig user={auth.user} />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftSideBar\r\n","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\Status.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\utils\\imageUpload.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\themeReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\alertReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\utils\\valid.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\profileReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\modalReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\suggestionsReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\RightSideBar.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\Posts.js",["456","457"],"import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport PostCard from '../PostCard'\r\n\r\nimport LoadIcon from '../../images/loading.gif'\r\nimport LoadMoreBtn from '../LoadMoreBtn'\r\nimport { getDataAPI } from '../../utils/fetchData'\r\nimport { POST_TYPES } from '../../redux/actions/postAction'\r\n\r\n\r\nconst Posts = () => {\r\n    const { homePosts, auth, theme } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const [load, setLoad] = useState(false)\r\n\r\n    const handleLoadMore = async () => {\r\n        setLoad(true)\r\n        const res = await getDataAPI(`posts?limit=${homePosts.page * 9}`, auth.token)\r\n\r\n        dispatch({\r\n            type: POST_TYPES.GET_POSTS,\r\n            payload: { ...res.data, page: homePosts.page + 1 }\r\n        })\r\n\r\n        setLoad(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n            {\r\n                homePosts.posts.map(post => (\r\n                    <PostCard key={post._id} post={post} theme={theme} />\r\n                ))\r\n            }\r\n\r\n            {\r\n                load && <img src={LoadIcon} alt=\"loading\" className=\"d-block mx-auto\" />\r\n            }\r\n\r\n\r\n            {/* <LoadMoreBtn result={homePosts.result} page={homePosts.page}\r\n            load={load} handleLoadMore={handleLoadMore} /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\authReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\detailPostReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\postReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\socketReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\statusReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\messageReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\notifyReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\callReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\peerReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\discoverReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\reportReducer.js",["458"],"import { DeleteData } from \"../actions/globalTypes\"\r\nimport { REPORT_TYPES } from \"../actions/reportAction\"\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    reports: [],\r\n    firstLoad: false\r\n}\r\nconst reportReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case REPORT_TYPES.CREATE_REPORT:\r\n            return {\r\n                ...state,\r\n                reports: [action.payload, ...state.reports]\r\n            }\r\n\r\n        case REPORT_TYPES.GET_ALL_REPORT:\r\n            return {\r\n                ...state,\r\n                reports: action.payload.reports,\r\n                firstLoad: true\r\n            }\r\n        // case REPORT_TYPES.LOADING_POST:\r\n        //     return {\r\n        //         ...state,\r\n        //         loading: action.payload\r\n        //     };\r\n        case REPORT_TYPES.DELETE_REPORT:\r\n            return {\r\n                ...state,\r\n                // reports: DeleteData(state.reports, action.payload)\r\n                reports: state.reports.filter(report => report._id !== action.payload)\r\n            };\r\n        case REPORT_TYPES.DELETE_REPORT_ONLY:\r\n            return {\r\n                ...state,\r\n                // reports: DeleteData(state.reports, action.payload)\r\n                reports: state.reports.filter(report => report._id !== action.payload)\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reportReducer","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\reducers\\onlineReducer.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\message\\RightSide.js",["459","460","461","462"],"import SentimentVerySatisfiedOutlinedIcon from '@mui/icons-material/SentimentVerySatisfiedOutlined'\r\nimport {\r\n    Avatar,\r\n    Badge,\r\n    Box,\r\n    IconButton,\r\n    Popper,\r\n    Skeleton,\r\n    Stack,\r\n    Typography\r\n} from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes'\r\nimport { getSenderFull } from '../../utils/chatLogic'\r\nimport { getDataAPI, postDataAPI } from '../../utils/fetchData'\r\nimport Icons from '../Icons'\r\nimport { SmallAvatar, StyledBadge } from '../StyleBadge'\r\nimport UserCardSkeleton from '../skeleton/UserCard'\r\nimport ScrollableChat from './ScrollableChat'\r\nimport UpdateGroupChat from './UpdateGroupChat'\r\nimport useIntersectionObserver from '../../hooks/useIntersectionObserver'\r\n\r\n\r\nconst RightSide = () => {\r\n    const { auth, message, theme, socket, online, peer } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    const [messages, setMessages] = useState([])\r\n    const [hasMoreMessages, setHasMoreMessages] = useState(true);\r\n    const [messagesLength, setMessagesLength] = useState(0)\r\n    const [page, setPage] = useState(1)\r\n\r\n    const [socketConnected, setSocketConnected] = useState(false);\r\n    const [firstLoad, setFirstLoad] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [typing, setTyping] = useState(false);\r\n    const [istyping, setIsTyping] = useState(false);\r\n\r\n    const [emojiRefEl, setEmojiRefEl] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        socket.emit(\"stop typing\", message.selectedChat._id);\r\n        try {\r\n            const { data } = await postDataAPI(\r\n                \"message\",\r\n                {\r\n                    content: text,\r\n                    chatId: message.selectedChat,\r\n                },\r\n                auth.token\r\n            );\r\n            socket.emit(\"new message\", data);\r\n            setText('')\r\n            setMessages([data, ...messages]);\r\n            setMessagesLength(prevLength => prevLength + 1)\r\n        } catch (error) {\r\n            dispatch({ type: GLOBALTYPES.ALERT, payload: { error: error.msg } })\r\n        }\r\n    }\r\n\r\n    const fetchMessages = async (firstLoad = false) => {\r\n        if (!hasMoreMessages) return;\r\n        if (loading) return;\r\n\r\n        try {\r\n            if (firstLoad) setFirstLoad(true);\r\n            setLoading(true)\r\n            console.log(page)\r\n            const { data } = await getDataAPI(`message/${message.selectedChat._id}?page=${page}&limit=20`, auth.token)\r\n\r\n            setMessages(prevMessages => {\r\n                const newMessages = [...prevMessages, ...data.messages]\r\n                if (data.messages.length === 0) setHasMoreMessages(false)\r\n                setMessagesLength(newMessages.length)\r\n                return newMessages\r\n            });\r\n\r\n            if (firstLoad) socket.emit(\"join chat\", message.selectedChat._id);\r\n        } catch (error) {\r\n            dispatch({ type: GLOBALTYPES.ALERT, payload: { error: error.msg } })\r\n        }\r\n        setFirstLoad(false)\r\n        setLoading(false);\r\n    };\r\n\r\n    const typingHandler = (e) => {\r\n        setText(e.target.value)\r\n\r\n        if (!socketConnected) return;\r\n\r\n        if (!typing) {\r\n            setTyping(true);\r\n            socket.emit(\"typing\", message.selectedChat._id);\r\n        }\r\n        let lastTypingTime = new Date().getTime();\r\n        var timerLength = 3000;\r\n        setTimeout(() => {\r\n            var timeNow = new Date().getTime();\r\n            var timeDiff = timeNow - lastTypingTime;\r\n            if (timeDiff >= timerLength && typing) {\r\n                socket.emit(\"stop typing\", message.selectedChat._id);\r\n                setTyping(false);\r\n            }\r\n        }, timerLength);\r\n    }\r\n\r\n    const fetchMoreRef = useIntersectionObserver(() => {\r\n        if (loading) return;\r\n        setPage(prevPage => prevPage + 1)\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (message.selectedChat) fetchMessages(true)\r\n\r\n        return () => {\r\n            console.log('clear')\r\n            setPage(1)\r\n            setMessages([])\r\n            setMessagesLength(0)\r\n            setHasMoreMessages(true)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [message.selectedChat])\r\n\r\n    useEffect(() => {\r\n        if (page > 1) fetchMessages()\r\n        // eslint-disable-next-line\r\n    }, [page])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.emit(\"setup\", auth.user);\r\n\r\n        socket.on(\"connected\", () => setSocketConnected(true));\r\n        socket.on(\"typing\", () => setIsTyping(true));\r\n        socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n        socket.on(\"message recieved\", (newMessageRecieved) => setMessages([newMessageRecieved, ...messages]));\r\n        // eslint-disable-next-line\r\n    }, [socket, messages]);\r\n\r\n    return (\r\n        <Stack sx={{ flex: 1 }}>\r\n            <div className=\"message_header\" style={{ cursor: 'pointer' }} >\r\n                {firstLoad ?\r\n                    <UserCardSkeleton primaryWidth='150px' secondaryWidth='100px' /> : <>\r\n                        {!message.selectedChat.isGroupChat ?\r\n                            <Stack ml={2} direction='row' spacing={2} alignItems='center'>\r\n                                <StyledBadge\r\n                                    overlap=\"circular\"\r\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                                    variant={online.includes(getSenderFull(auth.user, message.selectedChat.users).avatar) ? 'dot' : ''}\r\n                                >\r\n                                    <Avatar src={getSenderFull(auth.user, message.selectedChat.users).avatar} />\r\n                                </StyledBadge>\r\n                                <Typography component='span'>{getSenderFull(auth.user, message.selectedChat.users).username}</Typography>\r\n                            </Stack>\r\n                            :\r\n                            <Stack direction='row' justifyContent=\"space-between\" alignItems='center' sx={{ width: '100%', px: 2 }}>\r\n                                <Badge\r\n                                    overlap=\"circular\"\r\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                                    badgeContent={\r\n                                        <SmallAvatar src={message.selectedChat.users[0].avatar} />\r\n                                    }\r\n                                >\r\n                                    <Avatar src={message.selectedChat.users[1].avatar} />\r\n                                </Badge>\r\n                                <UpdateGroupChat />\r\n                            </Stack>\r\n                        }\r\n                    </>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"chat_container\">\r\n                {\r\n                    firstLoad ? <>\r\n                        {Array.from({ length: 25 }).map((_, i) => (<Skeleton key={i} />))}\r\n                    </> :\r\n                        <ScrollableChat messages={messages} fetchMoreRef={fetchMoreRef} hasMoreMessages={hasMoreMessages} />\r\n                }\r\n            </div>\r\n\r\n            <form className=\"chat_input\" onSubmit={handleSubmit} >\r\n                <input type=\"text\" placeholder=\"Enter you message...\"\r\n                    value={text} onChange={typingHandler}\r\n                    style={{\r\n                        filter: theme ? 'invert(1)' : 'invert(0)',\r\n                        background: theme ? '#040404' : '',\r\n                        color: theme ? 'white' : ''\r\n                    }} />\r\n\r\n                <IconButton\r\n                    color={Boolean(emojiRefEl) ? 'success' : 'default'}\r\n                    sx={{ position: 'relative' }}\r\n                    onClick={(e) => setEmojiRefEl(ele => ele ? null : e.currentTarget)}\r\n                >\r\n                    <SentimentVerySatisfiedOutlinedIcon />\r\n                </IconButton>\r\n                <Popper\r\n                    open={Boolean(emojiRefEl)}\r\n                    anchorEl={emojiRefEl}\r\n                    placement='top-start'\r\n                    sx={{ zIndex: 9999 }}\r\n                >\r\n                    <Icons setContent={setText} content={text} theme={theme} />\r\n                </Popper>\r\n\r\n                <button type=\"submit\" className=\"material-icons\"\r\n                    disabled={text ? false : true}>\r\n                    near_me\r\n                </button>\r\n            </form>\r\n        </Stack>\r\n    )\r\n}\r\n\r\nexport default RightSide\r\n","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\message\\LeftSide.js",["463"],"import SearchIcon from '@mui/icons-material/Search'\r\nimport {\r\n    Avatar,\r\n    Badge,\r\n    Box, Divider, Drawer,\r\n    List,\r\n    ListItemAvatar,\r\n    ListItemButton,\r\n    ListItemText,\r\n    Stack, Typography, useTheme\r\n} from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useDebounce from '../../hooks/useDebounce'\r\nimport useIntersectionObserver from '../../hooks/useIntersectionObserver'\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes'\r\nimport { MESS_TYPES, accessChat, getConversations } from '../../redux/actions/messageAction'\r\nimport { getSenderFull } from '../../utils/chatLogic'\r\nimport { getDataAPI } from '../../utils/fetchData'\r\nimport {\r\n    SearchIconWrapper,\r\n    SearchMaterial,\r\n    StyledInputBase\r\n} from '../Search'\r\nimport { SmallAvatar, StyledBadge } from '../StyleBadge'\r\nimport UserItem from '../UserItem'\r\nimport UserCardSkeleton from '../skeleton/UserCard'\r\nimport GroupChat from './GroupChat'\r\n\r\nconst LeftSide = () => {\r\n    const { auth, message, online } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n    const { palette } = useTheme()\r\n\r\n    const [search, setSearch] = useState('')\r\n    const searchDebounce = useDebounce(search, 500)\r\n\r\n    const [searchUsers, setSearchUsers] = useState([])\r\n\r\n    const [load, setLoad] = useState(false)\r\n    const [openDrawer, setOpenDrawer] = useState(false)\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [hasMoreConversastions, setHasMoreConservations] = useState(true);\r\n\r\n    const [firstLoading, setFirstLoading] = useState(false)\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSearch = async (searchDebounce) => {\r\n        try {\r\n            setLoad(true)\r\n            const res = await getDataAPI(`search?username=${searchDebounce}`, auth.token)\r\n            setSearchUsers(res.data.users)\r\n        } catch (err) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT, payload: { error: err.response.data.msg }\r\n            })\r\n        }\r\n        setLoad(false)\r\n    }\r\n\r\n    const handleCloseDrawer = (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpenDrawer(!openDrawer)\r\n    }\r\n\r\n    const fetchMoreRef = useIntersectionObserver(() => {\r\n        if (loading) return;\r\n        setPage(page + 1)\r\n    });\r\n\r\n    const fetchConservations = async (firstLoad) => {\r\n        if (loading) return;\r\n\r\n        try {\r\n            if (firstLoad) setFirstLoading(true)\r\n\r\n            setLoading(true);\r\n\r\n            const data = await dispatch(getConversations({ auth, page }))\r\n\r\n            if (data.chatsLength === 0) {\r\n                setHasMoreConservations(false)\r\n            }\r\n\r\n        } catch (error) {\r\n            dispatch({ type: GLOBALTYPES.ALERT, payload: { error: error.msg } })\r\n        }\r\n        setFirstLoading(false)\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchConservations(true)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (page > 1) fetchConservations(false)\r\n        // eslint-disable-next-line\r\n    }, [page])\r\n\r\n\r\n    useEffect(() => {\r\n        if (searchDebounce) {\r\n            handleSearch(searchDebounce)\r\n        } else {\r\n            setSearchUsers([])\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [searchDebounce, auth.token, dispatch])\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ py: 2, px: 1 }}>\r\n                <Stack direction='row' spacing={2}>\r\n                    <Stack direction='row' alignItems='center' spacing={1} sx={{ py: 1, px: 2, borderRadius: 4, cursor: 'pointer', background: '#ffff', flex: 1, '&:hover': { opacity: 0.6 } }} onClick={() => setOpenDrawer(!openDrawer)}>\r\n                        <SearchIcon />\r\n                        <Typography component='span' variant='h6'>Search Messenger</Typography>\r\n                    </Stack>\r\n                    <GroupChat />\r\n                </Stack>\r\n                <Drawer\r\n                    anchor='left'\r\n                    open={openDrawer}\r\n                    onClose={handleCloseDrawer}\r\n                >\r\n                    <Box sx={{ py: 2, px: 1 }}>\r\n                        <SearchMaterial>\r\n                            <SearchIconWrapper>\r\n                                <SearchIcon />\r\n                            </SearchIconWrapper>\r\n                            <StyledInputBase\r\n                                placeholder=\"Search…\"\r\n                                onChange={e => setSearch(e.target.value.toLowerCase().replace(/ /g, ''))}\r\n                            />\r\n                            {load &&\r\n                                <Box className='dots-7' sx={{ position: 'absolute', right: 8, top: '50%', transform: 'translateY(-50%)' }} />\r\n                            }\r\n                        </SearchMaterial>\r\n                    </Box>\r\n                    <Divider />\r\n                    {searchUsers.length > 0 &&\r\n                        <List>\r\n                            {searchUsers.map(user => (\r\n                                user._id !== auth.user._id ?\r\n                                    <UserItem key={user._id} user={user} onClick={() => dispatch(accessChat({ userId: user._id, auth }))} />\r\n                                    : null\r\n                            ))}\r\n                        </List>\r\n                    }\r\n                </Drawer>\r\n            </Box>\r\n            <Divider />\r\n            <List sx={{ overflow: 'auto' }}>\r\n                {\r\n                    message.chats.map((chat, index) => {\r\n                        const user = !chat.isGroupChat && getSenderFull(auth.user, chat.users)\r\n                        return (\r\n                            <ListItemButton key={chat._id}\r\n                                sx={{\r\n                                    bgcolor: message.selectedChat?._id === chat._id && '#fff', '&:hover': {\r\n                                        bgcolor: 'blue'\r\n                                    }\r\n                                }}\r\n                                ref={((index === message.chats.length - 1) && hasMoreConversastions) ? fetchMoreRef : null}\r\n                                onClick={() => dispatch({ type: MESS_TYPES.SET_SELECTED_CHAT, payload: chat })}\r\n                            >\r\n                                <ListItemAvatar>\r\n                                    {!chat.isGroupChat ?\r\n                                        <StyledBadge\r\n                                            overlap=\"circular\"\r\n                                            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                                            variant={online.includes(user._id) ? 'dot' : ''}\r\n                                        >\r\n                                            <Avatar src={user.avatar} />\r\n                                        </StyledBadge> :\r\n                                        <Badge\r\n                                            overlap=\"circular\"\r\n                                            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                                            badgeContent={\r\n                                                <SmallAvatar src={chat.users[0].avatar} />\r\n                                            }\r\n                                        >\r\n                                            <Avatar src={chat.users[1].avatar} />\r\n                                        </Badge>\r\n                                    }\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={user ? user.username : chat.chatName} secondary={chat.latestMessage ? `${chat.latestMessage.sender.username} : ${chat.latestMessage.content.length > 50 ? chat.latestMessage.content.substring(0, 51) + \"...\" : chat.latestMessage.content}` : null}\r\n                                />\r\n                            </ListItemButton>\r\n                        )\r\n                    }\r\n                    )\r\n                }\r\n                {firstLoading &&\r\n                    <>\r\n                        {\r\n                            Array.from({ length: 5 }).map((_, i) =>\r\n                                <ListItemButton key={i}>\r\n                                    <UserCardSkeleton />\r\n                                </ListItemButton>\r\n                            )\r\n                        }\r\n                    </>\r\n\r\n                }\r\n            </List>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default LeftSide\r\n","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\LoadMoreBtn.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\PostCard.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\PostThumb.js",["464"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction PostThumb({ posts, result }) {\r\n    const { theme } = useSelector(state => state)\r\n    if (result === 0) return <h2 className=\"text-center\" style={{ color: \"#0066ff\" }}>Không có bài viết</h2>\r\n    return (\r\n        <div className=\"post_thumb\">\r\n            {\r\n                posts.map(post => (\r\n                    <Link key={post._id} to={`/post/${post._id}`}>\r\n                        <div className=\"post_thumb_display\">\r\n                            <img src={post.images[0].url} alt={post.images[0].url}\r\n                                style={{ filter: theme ? 'invert(1)' : 'invert(0)' }} />\r\n\r\n                            <div className=\"post_thumb_menu\">\r\n                                <i className=\"far fa-heart\">{post.likes.length}</i>\r\n                                <i className=\"far fa-comment\">{post.comments.length}</i>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </Link>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostThumb;","D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\discoverAction.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\profileAction.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\profile\\Saved.js",["465","466"],"import React, { useState, useEffect } from 'react'\r\nimport PostThumb from '../PostThumb'\r\nimport LoadIcon from '../../images/loading.gif'\r\nimport LoadMoreBtn from '../LoadMoreBtn'\r\nimport { getDataAPI } from '../../utils/fetchData'\r\n// import { PROFILE_TYPES } from '../../redux/actions/profileAction'\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes'\r\n\r\nconst Saved = ({ auth, dispatch }) => {\r\n    const [savePosts, setSavePosts] = useState([])\r\n    const [result, setResult] = useState(9)\r\n    const [page, setPage] = useState(0)\r\n    const [load, setLoad] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setLoad(true)\r\n        getDataAPI('getSavePosts', auth.token)\r\n            .then(res => {\r\n                setSavePosts(res.data.savePosts)\r\n                setResult(res.data.result)\r\n                setLoad(false)\r\n            })\r\n            .catch(err => {\r\n                dispatch({ type: GLOBALTYPES.ALERT, payload: { error: err.response.data.msg } })\r\n            })\r\n        return () => setSavePosts([])\r\n    }, [auth.token, dispatch])\r\n\r\n    const handleLoadMore = async () => {\r\n        // setLoad(true)\r\n        const res = await getDataAPI(`getSavePosts?limit=${page * 9}`, auth.token)\r\n        setSavePosts(res.data.savePosts)\r\n        setResult(res.data.result)\r\n        setPage(page + 1)\r\n        setLoad(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PostThumb posts={savePosts} result={result} />\r\n\r\n            {\r\n                load && <img src={LoadIcon} alt=\"loading\" className=\"d-block mx-auto\" />\r\n            }\r\n\r\n\r\n            {/* <LoadMoreBtn result={result} page={page}\r\n                load={load} handleLoadMore={handleLoadMore} /> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Saved\r\n","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\profile\\Info.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\profile\\Posts.js",["467","468"],"import React, { useState, useEffect } from 'react'\r\nimport PostThumb from '../PostThumb'\r\nimport LoadIcon from '../../images/loading.gif'\r\nimport LoadMoreBtn from '../LoadMoreBtn'\r\nimport { getDataAPI } from '../../utils/fetchData'\r\nimport { PROFILE_TYPES } from '../../redux/actions/profileAction'\r\n\r\nconst Posts = ({ auth, id, dispatch, profile }) => {\r\n    const [posts, setPosts] = useState([])\r\n    const [result, setResult] = useState(9)\r\n    const [page, setPage] = useState(0)\r\n    const [load, setLoad] = useState(false)\r\n\r\n    useEffect(() => {\r\n        profile.posts.forEach(data => {\r\n            if (data._id === id) {\r\n                setPosts(data.posts)\r\n                setResult(data.result)\r\n                setPage(data.page)\r\n            }\r\n        })\r\n    }, [profile.posts, id])\r\n\r\n    const handleLoadMore = async () => {\r\n        setLoad(true)\r\n        const res = await getDataAPI(`user_posts/${id}?limit=${page * 9}`, auth.token)\r\n        const newData = { ...res.data, page: page + 1, _id: id }\r\n        dispatch({ type: PROFILE_TYPES.UPDATE_POST, payload: newData })\r\n        setLoad(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PostThumb posts={posts} result={result} />\r\n\r\n            {\r\n                load && <img src={LoadIcon} alt=\"loading\" className=\"d-block mx-auto\" />\r\n            }\r\n\r\n\r\n            {/* <LoadMoreBtn result={result} page={page}\r\n            load={load} handleLoadMore={handleLoadMore} /> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\NotifyModal.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\UserCard.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\FollowBtn.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\UserCardBig.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\Comments.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\InputComment.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\post_card\\CardFooter.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\post_card\\CardHeader.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\post_card\\CardBody.js",["469"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Carousel from '../../Carousel'\r\n\r\nconst CardBody = ({ post, theme }) => {\r\n    const [readMore, setReadMore] = useState(false)\r\n\r\n    return (\r\n        <div className=\"card_body\">\r\n            <div className=\"card_body-content\"\r\n                style={{\r\n                    filter: theme ? 'invert(1)' : 'invert(0)',\r\n                    color: theme ? 'white' : '#111',\r\n                }}>\r\n                <span>\r\n                    {\r\n                        post.content.length < 60\r\n                            ? post.content\r\n                            : readMore ? post.content + ' ' : post.content.slice(0, 60) + '.....'\r\n                    }\r\n                </span>\r\n\r\n                {\r\n                    post.content.length > 60 &&\r\n                    <span className=\"readMore\" onClick={() => setReadMore(!readMore)}>\r\n                        {readMore ? 'Hide content' : 'Read more'}\r\n                    </span>\r\n                }\r\n\r\n            </div>\r\n            {\r\n                post.images.length > 0 && <Carousel images={post.images} id={post._id} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardBody\r\n","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\profile\\Followers.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\profile\\EditProfile.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\profile\\Following.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\redux\\actions\\commentAction.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\utils\\config.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\LikeButton.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\ShareModal.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\ReportForm.js",["470","471","472"],"import { useState, useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\"\r\nimport { createReport } from \"../../redux/actions/reportAction\"\r\nfunction ReportForm({ setOnEdit, post }) {\r\n    // console.log(post)\r\n    // const initState = {\r\n    //     reports: '',\r\n    //     user: ''\r\n    // }\r\n\r\n    // const [reportData, setReportData] = useState(initState)\r\n    const [reportData, setReportData] = useState(\"\")\r\n    // const { reports } = reportData\r\n    // console.log(reports, reportData)\r\n    const { auth, theme } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setReportData(auth.user)\r\n    // }, [auth.user])\r\n\r\n    //để xử lý input, lưu giá trị vào user\r\n    const handleInput = e => {\r\n        // const { name, value } = e.target\r\n        // setReportData({ ...reportData, [name]: value })\r\n        const { value } = e.target;\r\n        // setReportData({ ...reportData, reports: value });\r\n        setReportData(value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        // dispatch(updateProfileUser({ userData, avatar, auth }))\r\n        dispatch(createReport({ post, reportData: reportData, auth }))\r\n        setOnEdit(false)\r\n        // console.log(post)\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit_profile mt-70\" onSubmit={handleSubmit}>\r\n            <button className=\"btn btn-danger btn_close\"\r\n                onClick={() => setOnEdit(false)}>\r\n                Đóng\r\n            </button>\r\n\r\n            <div className=\"mt-140\">\r\n                <form >\r\n                    <h1>Báo cáo bài viết</h1>\r\n\r\n                    <div className=\"form-group \">\r\n                        <label htmlFor=\"story\">Nội dung báo cáo</label>\r\n                        <textarea name=\"story\" value={reportData} cols=\"30\" rows=\"4\"\r\n                            className=\"form-control\" onChange={handleInput} />\r\n\r\n                        <small className=\"text-danger d-block text-right\">\r\n                            {reportData?.length}/200\r\n                        </small>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-info w-100\" type=\"submit\">Gửi báo cáo</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReportForm;","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\Carousel.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\comments\\CommentDisplay.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\comments\\CommentCard.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\home\\comments\\CommentMenu.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\message\\MsgDisplay.js",[],["473","474"],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\pages\\users.js",["475","476"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { deleteReport, getAllReports } from '../redux/actions/reportAction'\r\nimport moment from 'moment'\r\nfunction Report() {\r\n    const { auth, report, socket } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n    const [load, setLoad] = useState(false)\r\n\r\n    useEffect(() => {\r\n        // if (!report.firstLoad) {\r\n        dispatch(getAllReports(auth.token))\r\n        // }\r\n    }, [dispatch, auth.token])\r\n\r\n    const handleDeleteReport = (reportId) => {\r\n        if (window.confirm('Do you want to delete?')) {\r\n            dispatch(deleteReport({ reportId, auth, socket }))\r\n        }\r\n    }\r\n    // console.log(report.reports)\r\n    if (auth.user.role !== 'admin') {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='mt-70'>\r\n            <div className='text-center123'>\r\n                <h1>Báo cáo các bài viết</h1>\r\n            </div>\r\n\r\n            <div style={{ overflowX: \"auto\" }}>\r\n                <table className=\"customers\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Thứ tự</th>\r\n                            <th>Người báo cáo</th>\r\n                            <th>Người chủ bài viết</th>\r\n                            <th>Link bài viết</th>\r\n                            <th>Nội dung báo cáo</th>\r\n                            <th>Thời gian báo cáo</th>\r\n                            <th>Hành động</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {report.reports.map((report, index) => (\r\n\r\n                            <tr key={report._id}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{report.reporter.username}</td>\r\n                                <td>{report.user.username}</td>\r\n                                <td> <a href={`http://localhost:3000/post/${report.post._id}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    {report.post._id}\r\n                                </a></td>\r\n                                <td>{report.reason}</td>\r\n                                <td> {moment(report.createdAt).fromNow()}</td>\r\n\r\n                                <td>\r\n                                    <i className=\"fas fa-trash text-primary\"\r\n                                        onClick={() => handleDeleteReport(report._id)}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Report;","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\Search.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\StyleBadge.js",["477"],"import { styled } from '@mui/material/styles';\r\nimport Badge from '@mui/material/Badge';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nexport const StyledBadge = styled(Badge)(({ theme }) => ({\r\n    '& .MuiBadge-badge': {\r\n        backgroundColor: '#44b700',\r\n        color: '#44b700',\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: 'ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nexport const SmallAvatar = styled(Avatar)(({ theme }) => ({\r\n    width: 22,\r\n    height: 22,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n}));","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\UserItem.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\message\\ScrollableChat.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\message\\UpdateGroupChat.js",["478","479","480","481"],"import VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Chip,\r\n    CircularProgress,\r\n    IconButton,\r\n    List,\r\n    ListItemAvatar,\r\n    ListItemButton,\r\n    ListItemText,\r\n    Modal,\r\n    Stack, TextField,\r\n    Typography\r\n} from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useDebounce from '../../hooks/useDebounce';\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes';\r\nimport { MESS_TYPES } from '../../redux/actions/messageAction';\r\nimport { getDataAPI, patchDataAPI } from '../../utils/fetchData';\r\nimport UserItem from '../UserItem';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nfunction UpdateGroupChat() {\r\n    const dispatch = useDispatch()\r\n    const { auth, message } = useSelector(state => state)\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [groupChatName, setGroupChatName] = useState(\"\");\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [renameloading, setRenameLoading] = useState(false);\r\n\r\n    const searchDebounce = useDebounce(search, 500)\r\n\r\n    const handleSearch = async (query) => {\r\n        setSearch(query);\r\n        if (!query) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            const { data } = await getDataAPI(`search?username=${search}`, auth.token);\r\n            setSearchResult(data.users);\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {\r\n                    error: error.message\r\n                }\r\n            })\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleRename = async () => {\r\n        if (!groupChatName) return;\r\n\r\n        try {\r\n            setRenameLoading(true);\r\n\r\n            const { data } = await patchDataAPI(\r\n                `chat/rename`,\r\n                {\r\n                    chatId: message.selectedChat._id,\r\n                    chatName: groupChatName,\r\n                },\r\n                auth.token,\r\n            );\r\n            dispatch({ type: MESS_TYPES.SET_SELECTED_CHAT, payload: data })\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {\r\n                    error: error.message\r\n                }\r\n            })\r\n        }\r\n        setRenameLoading(false);\r\n        setGroupChatName(\"\");\r\n    };\r\n\r\n    const handleAddUser = async (user1) => {\r\n        if (message.selectedChat.users.find((u) => u._id === user1._id)) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {\r\n                    error: \"User Already in group!\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (message.selectedChat.groupAdmin._id !== auth.user._id) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {\r\n                    error: \"Only admins can add someone!\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            const { data } = await patchDataAPI(\r\n                `chat/groupadd`,\r\n                {\r\n                    chatId: message.selectedChat._id,\r\n                    userId: user1._id,\r\n                },\r\n                auth.token\r\n            );\r\n\r\n            dispatch({ type: MESS_TYPES.SET_SELECTED_CHAT, payload: data })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {\r\n                    error: \"Error Occured!\"\r\n                }\r\n            })\r\n        }\r\n        setLoading(false);\r\n        setGroupChatName(\"\");\r\n    };\r\n\r\n    const handleRemove = async (user1) => {\r\n        if (message.selectedChat.groupAdmin._id !== auth.user._id && user1._id !== auth.user._id) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {\r\n                    error: \"Only admins can remove someone!\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            const { data } = await patchDataAPI(\r\n                `chat/groupremove`,\r\n                {\r\n                    chatId: message.selectedChat._id,\r\n                    userId: user1._id,\r\n                },\r\n                auth.token\r\n            );\r\n\r\n            user1._id === auth.user._id ? dispatch({ type: MESS_TYPES.SET_SELECTED_CHAT, payload: null }) : dispatch({ type: MESS_TYPES.SET_SELECTED_CHAT, payload: data });\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {\r\n                    error: \"Error Occured!\"\r\n                }\r\n            })\r\n        }\r\n        setLoading(false);\r\n        setGroupChatName(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (searchDebounce) {\r\n            handleSearch(searchDebounce)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [searchDebounce])\r\n    return (\r\n        <>\r\n            <IconButton onClick={() => setOpen(true)}>\r\n                <VisibilityIcon />\r\n            </IconButton>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n            >\r\n                <Stack spacing={2} sx={style}>\r\n                    <Typography variant=\"h2\">{message.selectedChat.chatName}</Typography>\r\n\r\n                    <Stack direction='row' spacing={1} sx={{ flexWrap: 'wrap' }}>\r\n                        {message.selectedChat.users.map((u) => (\r\n                            <Chip\r\n                                key={u._id}\r\n                                label={`${u.username}${message.selectedChat.groupAdmin._id === u._id ? ' (Admin)' : ''}`}\r\n                                onDelete={() => handleRemove(u)}\r\n                            />\r\n                        ))}\r\n                    </Stack>\r\n\r\n                    <Stack spacing={2}>\r\n                        <Stack direction='row' spacing={1} alignItems='center'>\r\n                            <TextField\r\n                                label='Chat name'\r\n                                type='text'\r\n                                sx={{ flex: 1 }}\r\n                                value={groupChatName}\r\n                                onChange={(e) => setGroupChatName(e.target.value)}\r\n                            />\r\n                            <Button variant='contained' disabled={renameloading} onClick={handleRename}>Update</Button>\r\n                        </Stack>\r\n                        <TextField\r\n                            label='Add users'\r\n                            type='text'\r\n                            value={search}\r\n                            onChange={(e) => setSearch(e.target.value)}\r\n                        />\r\n                    </Stack>\r\n\r\n                    {loading ? (\r\n                        <Box sx={{ textAlign: 'center' }}>\r\n                            <CircularProgress sx={{ color: 'grey.500' }} />\r\n                        </Box>\r\n                    ) : (\r\n                        <>\r\n                            {\r\n                                searchResult.length > 0 &&\r\n                                <List>\r\n                                    {searchResult\r\n                                        ?.slice(0, 4).map(user => (\r\n                                            user._id !== auth.user._id ?\r\n                                                <UserItem key={user._id} user={user} onClick={() => handleAddUser(user)} />\r\n                                                : null\r\n                                        ))}\r\n                                </List>\r\n                            }\r\n                        </>\r\n                    )}\r\n                    <Button variant=\"contained\" color=\"error\" onClick={() => handleRemove(auth.user)}>Leave Group</Button>\r\n                </Stack>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateGroupChat","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\message\\GroupChat.js",["482","483","484","485"],"import GroupAddIcon from '@mui/icons-material/GroupAdd';\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Chip,\r\n    CircularProgress,\r\n    IconButton,\r\n    List,\r\n    ListItemAvatar,\r\n    ListItemButton,\r\n    ListItemText,\r\n    Modal,\r\n    Stack, TextField,\r\n    Typography\r\n} from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useDebounce from '../../hooks/useDebounce';\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes';\r\nimport { MESS_TYPES } from '../../redux/actions/messageAction';\r\nimport { getDataAPI, postDataAPI } from '../../utils/fetchData';\r\nimport UserItem from '../UserItem'\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nfunction GroupChat() {\r\n    const dispatch = useDispatch()\r\n    const { auth } = useSelector(state => state)\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [groupChatName, setGroupChatName] = useState('');\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const searchDebounce = useDebounce(search, 500)\r\n\r\n    const handleGroup = (userToAdd) => {\r\n        if (selectedUsers.includes(userToAdd)) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {\r\n                    error: \"User already added\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        setSelectedUsers([...selectedUsers, userToAdd]);\r\n    };\r\n\r\n    const handleSearch = async (query) => {\r\n        setSearch(query);\r\n        if (!query) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n\r\n            const { data } = await getDataAPI(`search?username=${search}`, auth.token);\r\n            setSearchResult(data.users);\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {\r\n                    error: error.message\r\n                }\r\n            })\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleDelete = (delUser) => {\r\n        setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (!groupChatName || !selectedUsers) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {\r\n                    error: \"Please fill all the feilds\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const { data } = await postDataAPI(\r\n                `chat/group`,\r\n                {\r\n                    name: groupChatName,\r\n                    users: JSON.stringify(selectedUsers.map((u) => u._id)),\r\n                },\r\n                auth.token,\r\n            );\r\n            dispatch({ type: MESS_TYPES.ADD_CHAT, payload: data })\r\n            setOpen(false);\r\n\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {\r\n                    success: \"New Group Chat Created!\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: {\r\n                    error: \"Failed to Create the Chat!\"\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (searchDebounce) {\r\n            handleSearch(searchDebounce)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [searchDebounce])\r\n\r\n    return (\r\n        <>\r\n            <IconButton onClick={() => setOpen(true)}>\r\n                <GroupAddIcon />\r\n            </IconButton>\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n            >\r\n                <Stack spacing={2} sx={style}>\r\n                    <Typography variant=\"h2\">Create Group Chat</Typography>\r\n                    <Stack spacing={2}>\r\n                        <TextField\r\n                            label='Chat name'\r\n                            type='text'\r\n                            value={groupChatName}\r\n                            onChange={(e) => setGroupChatName(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            label='Add users'\r\n                            type='text'\r\n                            value={search}\r\n                            onChange={(e) => setSearch(e.target.value)}\r\n                        />\r\n                    </Stack>\r\n                    {\r\n                        selectedUsers.length > 0 &&\r\n                        <Stack direction='row' spacing={1} sx={{ flexWrap: 'wrap' }}>\r\n                            {selectedUsers.map((u) => (\r\n                                <Chip\r\n                                    key={u._id}\r\n                                    label={u.username}\r\n                                    onDelete={() => handleDelete(u)}\r\n                                />\r\n                            ))}\r\n                        </Stack>\r\n                    }\r\n                    {loading ? (\r\n                        // <ChatLoading />\r\n                        <Box sx={{ textAlign: 'center' }}>\r\n                            <CircularProgress sx={{ color: 'grey.500' }} />\r\n                        </Box>\r\n                    ) : (\r\n                        <>\r\n                            {\r\n                                searchResult.length > 0 &&\r\n                                <List>\r\n                                    {searchResult\r\n                                        ?.slice(0, 4).map(user => (\r\n                                            user._id !== auth.user._id ?\r\n                                                <UserItem key={user._id} user={user} onClick={() => handleGroup(user)} />\r\n                                                : null\r\n                                        ))}\r\n                                </List>\r\n                            }\r\n                        </>\r\n                    )}\r\n                    <Button variant=\"contained\" onClick={handleSubmit}>Create Chat</Button>\r\n                </Stack>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GroupChat","D:\\JoynetSocialNetwork\\do-an-fe\\src\\utils\\chatLogic.js",[],"D:\\JoynetSocialNetwork\\do-an-fe\\src\\hooks\\useDebounce.js",["486"],"import React, { useEffect, useState } from 'react'\r\n\r\nlet timerId;\r\n\r\nfunction useDebounce(value, timer) {\r\n    const [data, setData] = useState(value);\r\n\r\n    useEffect(() => {\r\n        if (timerId) clearTimeout(timerId);\r\n\r\n        timerId = setTimeout(() => {\r\n            setData(value)\r\n        }, timer)\r\n\r\n    }, [value, timer])\r\n\r\n    return data\r\n}\r\n\r\nexport default useDebounce","D:\\JoynetSocialNetwork\\do-an-fe\\src\\hooks\\useIntersectionObserver.js",["487"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst useIntersection = (callback, options) => {\r\n    const [node, setNode] = useState(null);\r\n    const observer = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (observer.current) observer.current.disconnect();\r\n\r\n        observer.current = new IntersectionObserver((entries) => {\r\n            entries.forEach((entry) => {\r\n                if (entry.isIntersecting) {\r\n                    callback();\r\n                    // console.log(entry)\r\n                }\r\n            });\r\n        }, options);\r\n\r\n        if (node) observer.current.observe(node);\r\n\r\n        return () => {\r\n            observer.current.disconnect();\r\n        };\r\n    }, [node, options, callback]);\r\n\r\n    return setNode;\r\n};\r\n\r\nexport default useIntersection;\r\n","D:\\JoynetSocialNetwork\\do-an-fe\\src\\components\\skeleton\\UserCard.js",[],{"ruleId":"488","replacedBy":"489"},{"ruleId":"490","replacedBy":"491"},{"ruleId":"492","severity":1,"message":"493","line":10,"column":8,"nodeType":"494","messageId":"495","endLine":10,"endColumn":15},{"ruleId":"492","severity":1,"message":"496","line":24,"column":8,"nodeType":"494","messageId":"495","endLine":24,"endColumn":19},{"ruleId":"492","severity":1,"message":"497","line":113,"column":11,"nodeType":"494","messageId":"495","endLine":113,"endColumn":23},{"ruleId":"492","severity":1,"message":"498","line":120,"column":11,"nodeType":"494","messageId":"495","endLine":120,"endColumn":25},{"ruleId":"492","severity":1,"message":"499","line":4,"column":8,"nodeType":"494","messageId":"495","endLine":4,"endColumn":16},{"ruleId":"492","severity":1,"message":"500","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":19},{"ruleId":"492","severity":1,"message":"501","line":19,"column":11,"nodeType":"494","messageId":"495","endLine":19,"endColumn":25},{"ruleId":"502","severity":1,"message":"503","line":21,"column":8,"nodeType":"504","endLine":21,"endColumn":28,"suggestions":"505"},{"ruleId":"492","severity":1,"message":"506","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":16},{"ruleId":"492","severity":1,"message":"507","line":18,"column":12,"nodeType":"494","messageId":"495","endLine":18,"endColumn":16},{"ruleId":"492","severity":1,"message":"508","line":4,"column":8,"nodeType":"494","messageId":"495","endLine":4,"endColumn":16},{"ruleId":"492","severity":1,"message":"509","line":5,"column":8,"nodeType":"494","messageId":"495","endLine":5,"endColumn":17},{"ruleId":"492","severity":1,"message":"506","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":16},{"ruleId":"492","severity":1,"message":"510","line":7,"column":10,"nodeType":"494","messageId":"495","endLine":7,"endColumn":24},{"ruleId":"492","severity":1,"message":"511","line":11,"column":19,"nodeType":"494","messageId":"495","endLine":11,"endColumn":30},{"ruleId":"492","severity":1,"message":"512","line":12,"column":11,"nodeType":"494","messageId":"495","endLine":12,"endColumn":19},{"ruleId":"492","severity":1,"message":"500","line":6,"column":8,"nodeType":"494","messageId":"495","endLine":6,"endColumn":19},{"ruleId":"492","severity":1,"message":"501","line":17,"column":11,"nodeType":"494","messageId":"495","endLine":17,"endColumn":25},{"ruleId":"492","severity":1,"message":"513","line":1,"column":10,"nodeType":"494","messageId":"495","endLine":1,"endColumn":20},{"ruleId":"492","severity":1,"message":"514","line":5,"column":5,"nodeType":"494","messageId":"495","endLine":5,"endColumn":8},{"ruleId":"492","severity":1,"message":"515","line":26,"column":51,"nodeType":"494","messageId":"495","endLine":26,"endColumn":55},{"ruleId":"492","severity":1,"message":"516","line":33,"column":12,"nodeType":"494","messageId":"495","endLine":33,"endColumn":26},{"ruleId":"492","severity":1,"message":"517","line":40,"column":12,"nodeType":"494","messageId":"495","endLine":40,"endColumn":20},{"ruleId":"492","severity":1,"message":"518","line":33,"column":13,"nodeType":"494","messageId":"495","endLine":33,"endColumn":20},{"ruleId":"492","severity":1,"message":"519","line":1,"column":10,"nodeType":"494","messageId":"495","endLine":1,"endColumn":21},{"ruleId":"492","severity":1,"message":"500","line":4,"column":8,"nodeType":"494","messageId":"495","endLine":4,"endColumn":19},{"ruleId":"492","severity":1,"message":"501","line":29,"column":11,"nodeType":"494","messageId":"495","endLine":29,"endColumn":25},{"ruleId":"492","severity":1,"message":"500","line":4,"column":8,"nodeType":"494","messageId":"495","endLine":4,"endColumn":19},{"ruleId":"492","severity":1,"message":"501","line":24,"column":11,"nodeType":"494","messageId":"495","endLine":24,"endColumn":25},{"ruleId":"492","severity":1,"message":"520","line":2,"column":10,"nodeType":"494","messageId":"495","endLine":2,"endColumn":14},{"ruleId":"492","severity":1,"message":"521","line":1,"column":20,"nodeType":"494","messageId":"495","endLine":1,"endColumn":29},{"ruleId":"492","severity":1,"message":"522","line":3,"column":10,"nodeType":"494","messageId":"495","endLine":3,"endColumn":21},{"ruleId":"492","severity":1,"message":"523","line":16,"column":19,"nodeType":"494","messageId":"495","endLine":16,"endColumn":24},{"ruleId":"488","replacedBy":"524"},{"ruleId":"490","replacedBy":"525"},{"ruleId":"492","severity":1,"message":"507","line":9,"column":12,"nodeType":"494","messageId":"495","endLine":9,"endColumn":16},{"ruleId":"492","severity":1,"message":"526","line":9,"column":18,"nodeType":"494","messageId":"495","endLine":9,"endColumn":25},{"ruleId":"492","severity":1,"message":"527","line":4,"column":8,"nodeType":"494","messageId":"495","endLine":4,"endColumn":13},{"ruleId":"492","severity":1,"message":"528","line":3,"column":5,"nodeType":"494","messageId":"495","endLine":3,"endColumn":11},{"ruleId":"492","severity":1,"message":"529","line":10,"column":5,"nodeType":"494","messageId":"495","endLine":10,"endColumn":19},{"ruleId":"492","severity":1,"message":"530","line":11,"column":5,"nodeType":"494","messageId":"495","endLine":11,"endColumn":19},{"ruleId":"492","severity":1,"message":"531","line":12,"column":5,"nodeType":"494","messageId":"495","endLine":12,"endColumn":17},{"ruleId":"492","severity":1,"message":"528","line":3,"column":5,"nodeType":"494","messageId":"495","endLine":3,"endColumn":11},{"ruleId":"492","severity":1,"message":"529","line":10,"column":5,"nodeType":"494","messageId":"495","endLine":10,"endColumn":19},{"ruleId":"492","severity":1,"message":"530","line":11,"column":5,"nodeType":"494","messageId":"495","endLine":11,"endColumn":19},{"ruleId":"492","severity":1,"message":"531","line":12,"column":5,"nodeType":"494","messageId":"495","endLine":12,"endColumn":17},{"ruleId":"492","severity":1,"message":"532","line":1,"column":8,"nodeType":"494","messageId":"495","endLine":1,"endColumn":13},{"ruleId":"492","severity":1,"message":"532","line":1,"column":8,"nodeType":"494","messageId":"495","endLine":1,"endColumn":13},"no-native-reassign",["533"],"no-negated-in-lhs",["534"],"no-unused-vars","'Reports' is defined but never used.","Identifier","unusedVar","'LoadingHome' is defined but never used.","'handleIsRead' is assigned a value but never used.","'handleUnIsRead' is assigned a value but never used.","'useTheme' is defined but never used.","'LoadMoreBtn' is defined but never used.","'handleLoadMore' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'profile.ids'. Either include it or remove the dependency array.","ArrayExpression",["535"],"'LoadIcon' is defined but never used.","'load' is assigned a value but never used.","'UserCard' is defined but never used.","'FollowBtn' is defined but never used.","'getSuggestions' is defined but never used.","'suggestions' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'DeleteData' is defined but never used.","'Box' is defined but never used.","'peer' is assigned a value but never used.","'messagesLength' is assigned a value but never used.","'istyping' is assigned a value but never used.","'palette' is assigned a value but never used.","'useDispatch' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'GLOBALTYPES' is defined but never used.","'theme' is assigned a value but never used.",["533"],["534"],"'setLoad' is assigned a value but never used.","'Stack' is defined but never used.","'Avatar' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemButton' is defined but never used.","'ListItemText' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"536","fix":"537"},"Update the dependencies array to be: [id, auth, dispatch, profile.ids]",{"range":"538","text":"539"},[884,904],"[id, auth, dispatch, profile.ids]"]