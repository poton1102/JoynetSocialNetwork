{"ast":null,"code":"import { postDataAPI } from \"../../utils/fetchData\";\nimport { GLOBALTYPES } from \"./globalTypes\";\nexport const REPORT_TYPES = {\n  REPORT_POST: 'REPORT_POST',\n  CLEAR_REPORT: 'CLEAR_REPORT'\n};\nexport const createReport = _ref => {\n  let {\n    post,\n    reportData,\n    auth\n  } = _ref;\n  return async dispatch => {\n    if (reportData.story.length > 200) return dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: \"Báo cáo của bạn quá dài.\"\n      }\n    });\n    try {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          loading: true\n        }\n      });\n      const res = await postDataAPI(`post/${post._id}/report`, {\n        reportData\n      }, auth.token);\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          success: res.data.msg\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n};","map":{"version":3,"names":["postDataAPI","GLOBALTYPES","REPORT_TYPES","REPORT_POST","CLEAR_REPORT","createReport","_ref","post","reportData","auth","dispatch","story","length","type","ALERT","payload","error","loading","res","_id","token","success","data","msg","err","response"],"sources":["D:/JoynetSocialNetwork/do-an-fe/src/redux/actions/reportAction.js"],"sourcesContent":["import { postDataAPI } from \"../../utils/fetchData\";\r\nimport { GLOBALTYPES } from \"./globalTypes\";\r\n\r\nexport const REPORT_TYPES = {\r\n\r\n    REPORT_POST: 'REPORT_POST',\r\n    CLEAR_REPORT: 'CLEAR_REPORT'\r\n}\r\n\r\nexport const createReport = ({ post, reportData, auth }) => async (dispatch) => {\r\n\r\n    if (reportData.story.length > 200)\r\n        return dispatch({ type: GLOBALTYPES.ALERT, payload: { error: \"Báo cáo của bạn quá dài.\" } })\r\n\r\n    try {\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } })\r\n        const res = await postDataAPI(`post/${post._id}/report`, { reportData }, auth.token)\r\n\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { success: res.data.msg } })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: { error: err.response.data.msg }\r\n        })\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,uBAAuB;AACnD,SAASC,WAAW,QAAQ,eAAe;AAE3C,OAAO,MAAMC,YAAY,GAAG;EAExBC,WAAW,EAAE,aAAa;EAC1BC,YAAY,EAAE;AAClB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGC,IAAA;EAAA,IAAC;IAAEC,IAAI;IAAEC,UAAU;IAAEC;EAAK,CAAC,GAAAH,IAAA;EAAA,OAAK,MAAOI,QAAQ,IAAK;IAE5E,IAAIF,UAAU,CAACG,KAAK,CAACC,MAAM,GAAG,GAAG,EAC7B,OAAOF,QAAQ,CAAC;MAAEG,IAAI,EAAEZ,WAAW,CAACa,KAAK;MAAEC,OAAO,EAAE;QAAEC,KAAK,EAAE;MAA2B;IAAE,CAAC,CAAC;IAEhG,IAAI;MACAN,QAAQ,CAAC;QAAEG,IAAI,EAAEZ,WAAW,CAACa,KAAK;QAAEC,OAAO,EAAE;UAAEE,OAAO,EAAE;QAAK;MAAE,CAAC,CAAC;MACjE,MAAMC,GAAG,GAAG,MAAMlB,WAAW,CAAE,QAAOO,IAAI,CAACY,GAAI,SAAQ,EAAE;QAAEX;MAAW,CAAC,EAAEC,IAAI,CAACW,KAAK,CAAC;MAEpFV,QAAQ,CAAC;QAAEG,IAAI,EAAEZ,WAAW,CAACa,KAAK;QAAEC,OAAO,EAAE;UAAEM,OAAO,EAAEH,GAAG,CAACI,IAAI,CAACC;QAAI;MAAE,CAAC,CAAC;IAC7E,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVd,QAAQ,CAAC;QACLG,IAAI,EAAEZ,WAAW,CAACa,KAAK;QACvBC,OAAO,EAAE;UAAEC,KAAK,EAAEQ,GAAG,CAACC,QAAQ,CAACH,IAAI,CAACC;QAAI;MAC5C,CAAC,CAAC;IACN;EACJ,CAAC;AAAA"},"metadata":{},"sourceType":"module"}