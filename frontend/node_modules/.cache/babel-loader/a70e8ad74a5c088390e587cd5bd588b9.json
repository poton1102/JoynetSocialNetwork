{"ast":null,"code":"var _jsxFileName = \"D:\\\\JoynetSocialNetwork\\\\do-an-fe\\\\src\\\\components\\\\message\\\\RightSide.js\",\n  _s = $RefreshSig$();\nimport SentimentVerySatisfiedOutlinedIcon from '@mui/icons-material/SentimentVerySatisfiedOutlined';\nimport { Avatar, Badge, Box, IconButton, Popper, Skeleton, Stack, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes';\nimport { getSenderFull } from '../../utils/chatLogic';\nimport { getDataAPI, postDataAPI } from '../../utils/fetchData';\nimport Icons from '../Icons';\nimport { SmallAvatar, StyledBadge } from '../StyleBadge';\nimport UserCardSkeleton from '../skeleton/UserCard';\nimport ScrollableChat from './ScrollableChat';\nimport UpdateGroupChat from './UpdateGroupChat';\nimport useIntersectionObserver from '../../hooks/useIntersectionObserver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RightSide = () => {\n  _s();\n  const {\n    auth,\n    message,\n    theme,\n    socket,\n    online,\n    peer\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [text, setText] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [hasMoreMessages, setHasMoreMessages] = useState(true);\n  const [messagesLength, setMessagesLength] = useState(0);\n  const [page, setPage] = useState(1);\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [firstLoad, setFirstLoad] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const [emojiRefEl, setEmojiRefEl] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    socket.emit(\"stop typing\", message.selectedChat._id);\n    try {\n      const {\n        data\n      } = await postDataAPI(\"message\", {\n        content: text,\n        chatId: message.selectedChat\n      }, auth.token);\n      socket.emit(\"new message\", data);\n      setText('');\n      setMessages([data, ...messages]);\n      setMessagesLength(prevLength => prevLength + 1);\n    } catch (error) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: error.msg\n        }\n      });\n    }\n  };\n  const fetchMessages = async function () {\n    let firstLoad = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    console.log(!message.selectedChat, hasMoreMessages, firstLoad);\n    if (!message.selectedChat) return;\n    if (!hasMoreMessages) return;\n    if (loading) return;\n    try {\n      if (firstLoad) setFirstLoad(true);\n      setLoading(true);\n      console.log(page);\n      const {\n        data\n      } = await getDataAPI(`message/${message.selectedChat._id}?page=${page}&limit=20`, auth.token);\n      setMessages(prevMessages => {\n        const newMessages = [...prevMessages, ...data.messages];\n        if (data.messages.length === 0) setHasMoreMessages(false);\n        setMessagesLength(newMessages.length);\n        return newMessages;\n      });\n      if (firstLoad) socket.emit(\"join chat\", message.selectedChat._id);\n    } catch (error) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: error.msg\n        }\n      });\n    }\n    setFirstLoad(false);\n    setLoading(false);\n  };\n  const typingHandler = e => {\n    setText(e.target.value);\n    if (!socketConnected) return;\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", message.selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", message.selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n  const fetchMoreRef = useIntersectionObserver(() => {\n    if (loading) return;\n    setPage(prevPage => prevPage + 1);\n  });\n  useEffect(() => {\n    fetchMessages(true);\n    return () => {\n      console.log('clear');\n      setPage(1);\n      setMessages([]);\n      setMessagesLength(0);\n      setHasMoreMessages(true);\n    };\n    // eslint-disable-next-line\n  }, [message.selectedChat]);\n  useEffect(() => {\n    if (page > 1) fetchMessages();\n    // eslint-disable-next-line\n  }, [page]);\n  useEffect(() => {\n    socket.emit(\"setup\", auth.user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n    socket.on(\"message recieved\", newMessageRecieved => setMessages([...messages, newMessageRecieved]));\n    // eslint-disable-next-line\n  }, [socket, messages]);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    sx: {\n      flex: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message_header\",\n      style: {\n        cursor: 'pointer'\n      },\n      children: firstLoad ? /*#__PURE__*/_jsxDEV(UserCardSkeleton, {\n        primaryWidth: \"150px\",\n        secondaryWidth: \"100px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: !message.selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(Stack, {\n          ml: 2,\n          direction: \"row\",\n          spacing: 2,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(StyledBadge, {\n            overlap: \"circular\",\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'right'\n            },\n            variant: online.includes(getSenderFull(auth.user, message.selectedChat.users).avatar) ? 'dot' : '',\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: getSenderFull(auth.user, message.selectedChat.users).avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            children: getSenderFull(auth.user, message.selectedChat.users).username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          sx: {\n            width: '100%',\n            px: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Badge, {\n            overlap: \"circular\",\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'right'\n            },\n            badgeContent: /*#__PURE__*/_jsxDEV(SmallAvatar, {\n              src: message.selectedChat.users[0].avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 41\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: message.selectedChat.users[1].avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(UpdateGroupChat, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_container\",\n      children: firstLoad ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: Array.from({\n          length: 25\n        }).map((_, i) => /*#__PURE__*/_jsxDEV(Skeleton, {}, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 68\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(ScrollableChat, {\n        messages: messages,\n        fetchMoreRef: fetchMoreRef,\n        hasMoreMessages: hasMoreMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat_input\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter you message...\",\n        value: text,\n        onChange: typingHandler,\n        style: {\n          filter: theme ? 'invert(1)' : 'invert(0)',\n          background: theme ? '#040404' : '',\n          color: theme ? 'white' : ''\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: Boolean(emojiRefEl) ? 'success' : 'default',\n        sx: {\n          position: 'relative'\n        },\n        onClick: e => setEmojiRefEl(ele => ele ? null : e.currentTarget),\n        children: /*#__PURE__*/_jsxDEV(SentimentVerySatisfiedOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Popper, {\n        open: Boolean(emojiRefEl),\n        anchorEl: emojiRefEl,\n        placement: \"top-start\",\n        sx: {\n          zIndex: 9999\n        },\n        children: /*#__PURE__*/_jsxDEV(Icons, {\n          setContent: setText,\n          content: text,\n          theme: theme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"material-icons\",\n        disabled: text ? false : true,\n        children: \"near_me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n_s(RightSide, \"rmsiBx6nJGoNidr5dU+1A6ogEFk=\", false, function () {\n  return [useSelector, useDispatch, useIntersectionObserver];\n});\n_c = RightSide;\nexport default RightSide;\nvar _c;\n$RefreshReg$(_c, \"RightSide\");","map":{"version":3,"names":["SentimentVerySatisfiedOutlinedIcon","Avatar","Badge","Box","IconButton","Popper","Skeleton","Stack","Typography","React","useEffect","useState","useDispatch","useSelector","GLOBALTYPES","getSenderFull","getDataAPI","postDataAPI","Icons","SmallAvatar","StyledBadge","UserCardSkeleton","ScrollableChat","UpdateGroupChat","useIntersectionObserver","jsxDEV","_jsxDEV","Fragment","_Fragment","RightSide","_s","auth","message","theme","socket","online","peer","state","dispatch","text","setText","messages","setMessages","hasMoreMessages","setHasMoreMessages","messagesLength","setMessagesLength","page","setPage","socketConnected","setSocketConnected","firstLoad","setFirstLoad","loading","setLoading","typing","setTyping","istyping","setIsTyping","emojiRefEl","setEmojiRefEl","handleSubmit","e","preventDefault","emit","selectedChat","_id","data","content","chatId","token","prevLength","error","type","ALERT","payload","msg","fetchMessages","arguments","length","undefined","console","log","prevMessages","newMessages","typingHandler","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","fetchMoreRef","prevPage","user","on","newMessageRecieved","sx","flex","children","className","style","cursor","primaryWidth","secondaryWidth","fileName","_jsxFileName","lineNumber","columnNumber","isGroupChat","ml","direction","spacing","alignItems","overlap","anchorOrigin","vertical","horizontal","variant","includes","users","avatar","src","component","username","justifyContent","width","px","badgeContent","Array","from","map","_","i","onSubmit","placeholder","onChange","filter","background","color","Boolean","position","onClick","ele","currentTarget","open","anchorEl","placement","zIndex","setContent","disabled","_c","$RefreshReg$"],"sources":["D:/JoynetSocialNetwork/do-an-fe/src/components/message/RightSide.js"],"sourcesContent":["import SentimentVerySatisfiedOutlinedIcon from '@mui/icons-material/SentimentVerySatisfiedOutlined'\r\nimport {\r\n    Avatar,\r\n    Badge,\r\n    Box,\r\n    IconButton,\r\n    Popper,\r\n    Skeleton,\r\n    Stack,\r\n    Typography\r\n} from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes'\r\nimport { getSenderFull } from '../../utils/chatLogic'\r\nimport { getDataAPI, postDataAPI } from '../../utils/fetchData'\r\nimport Icons from '../Icons'\r\nimport { SmallAvatar, StyledBadge } from '../StyleBadge'\r\nimport UserCardSkeleton from '../skeleton/UserCard'\r\nimport ScrollableChat from './ScrollableChat'\r\nimport UpdateGroupChat from './UpdateGroupChat'\r\nimport useIntersectionObserver from '../../hooks/useIntersectionObserver'\r\n\r\n\r\nconst RightSide = () => {\r\n    const { auth, message, theme, socket, online, peer } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    const [messages, setMessages] = useState([])\r\n    const [hasMoreMessages, setHasMoreMessages] = useState(true);\r\n    const [messagesLength, setMessagesLength] = useState(0)\r\n    const [page, setPage] = useState(1)\r\n\r\n    const [socketConnected, setSocketConnected] = useState(false);\r\n    const [firstLoad, setFirstLoad] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [typing, setTyping] = useState(false);\r\n    const [istyping, setIsTyping] = useState(false);\r\n\r\n    const [emojiRefEl, setEmojiRefEl] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        socket.emit(\"stop typing\", message.selectedChat._id);\r\n        try {\r\n            const { data } = await postDataAPI(\r\n                \"message\",\r\n                {\r\n                    content: text,\r\n                    chatId: message.selectedChat,\r\n                },\r\n                auth.token\r\n            );\r\n            socket.emit(\"new message\", data);\r\n            setText('')\r\n            setMessages([data, ...messages]);\r\n            setMessagesLength(prevLength => prevLength + 1)\r\n        } catch (error) {\r\n            dispatch({ type: GLOBALTYPES.ALERT, payload: { error: error.msg } })\r\n        }\r\n    }\r\n\r\n    const fetchMessages = async (firstLoad = false) => {\r\n        console.log(!message.selectedChat, hasMoreMessages, firstLoad)\r\n        if (!message.selectedChat) return;\r\n        if (!hasMoreMessages) return;\r\n        if (loading) return;\r\n\r\n        try {\r\n            if (firstLoad) setFirstLoad(true);\r\n            setLoading(true)\r\n            console.log(page)\r\n            const { data } = await getDataAPI(`message/${message.selectedChat._id}?page=${page}&limit=20`, auth.token)\r\n\r\n            setMessages(prevMessages => {\r\n                const newMessages = [...prevMessages, ...data.messages]\r\n                if (data.messages.length === 0) setHasMoreMessages(false)\r\n                setMessagesLength(newMessages.length)\r\n                return newMessages\r\n            });\r\n\r\n            if (firstLoad) socket.emit(\"join chat\", message.selectedChat._id);\r\n        } catch (error) {\r\n            dispatch({ type: GLOBALTYPES.ALERT, payload: { error: error.msg } })\r\n        }\r\n        setFirstLoad(false)\r\n        setLoading(false);\r\n    };\r\n\r\n    const typingHandler = (e) => {\r\n        setText(e.target.value)\r\n\r\n        if (!socketConnected) return;\r\n\r\n        if (!typing) {\r\n            setTyping(true);\r\n            socket.emit(\"typing\", message.selectedChat._id);\r\n        }\r\n        let lastTypingTime = new Date().getTime();\r\n        var timerLength = 3000;\r\n        setTimeout(() => {\r\n            var timeNow = new Date().getTime();\r\n            var timeDiff = timeNow - lastTypingTime;\r\n            if (timeDiff >= timerLength && typing) {\r\n                socket.emit(\"stop typing\", message.selectedChat._id);\r\n                setTyping(false);\r\n            }\r\n        }, timerLength);\r\n    }\r\n\r\n    const fetchMoreRef = useIntersectionObserver(() => {\r\n        if (loading) return;\r\n        setPage(prevPage => prevPage + 1)\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchMessages(true)\r\n\r\n        return () => {\r\n            console.log('clear')\r\n            setPage(1)\r\n            setMessages([])\r\n            setMessagesLength(0)\r\n            setHasMoreMessages(true)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [message.selectedChat])\r\n\r\n    useEffect(() => {\r\n        if (page > 1) fetchMessages()\r\n        // eslint-disable-next-line\r\n    }, [page])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.emit(\"setup\", auth.user);\r\n\r\n        socket.on(\"connected\", () => setSocketConnected(true));\r\n        socket.on(\"typing\", () => setIsTyping(true));\r\n        socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n        socket.on(\"message recieved\", (newMessageRecieved) => setMessages([...messages, newMessageRecieved]));\r\n        // eslint-disable-next-line\r\n    }, [socket, messages]);\r\n\r\n    return (\r\n        <Stack sx={{ flex: 1 }}>\r\n            <div className=\"message_header\" style={{ cursor: 'pointer' }} >\r\n                {firstLoad ?\r\n                    <UserCardSkeleton primaryWidth='150px' secondaryWidth='100px' /> : <>\r\n                        {!message.selectedChat.isGroupChat ?\r\n                            <Stack ml={2} direction='row' spacing={2} alignItems='center'>\r\n                                <StyledBadge\r\n                                    overlap=\"circular\"\r\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                                    variant={online.includes(getSenderFull(auth.user, message.selectedChat.users).avatar) ? 'dot' : ''}\r\n                                >\r\n                                    <Avatar src={getSenderFull(auth.user, message.selectedChat.users).avatar} />\r\n                                </StyledBadge>\r\n                                <Typography component='span'>{getSenderFull(auth.user, message.selectedChat.users).username}</Typography>\r\n                            </Stack>\r\n                            :\r\n                            <Stack direction='row' justifyContent=\"space-between\" alignItems='center' sx={{ width: '100%', px: 2 }}>\r\n                                <Badge\r\n                                    overlap=\"circular\"\r\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                                    badgeContent={\r\n                                        <SmallAvatar src={message.selectedChat.users[0].avatar} />\r\n                                    }\r\n                                >\r\n                                    <Avatar src={message.selectedChat.users[1].avatar} />\r\n                                </Badge>\r\n                                <UpdateGroupChat />\r\n                            </Stack>\r\n                        }\r\n                    </>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"chat_container\">\r\n                {\r\n                    firstLoad ? <>\r\n                        {Array.from({ length: 25 }).map((_, i) => (<Skeleton key={i} />))}\r\n                    </> :\r\n                        <ScrollableChat messages={messages} fetchMoreRef={fetchMoreRef} hasMoreMessages={hasMoreMessages} />\r\n                }\r\n            </div>\r\n\r\n            <form className=\"chat_input\" onSubmit={handleSubmit} >\r\n                <input type=\"text\" placeholder=\"Enter you message...\"\r\n                    value={text} onChange={typingHandler}\r\n                    style={{\r\n                        filter: theme ? 'invert(1)' : 'invert(0)',\r\n                        background: theme ? '#040404' : '',\r\n                        color: theme ? 'white' : ''\r\n                    }} />\r\n\r\n                <IconButton\r\n                    color={Boolean(emojiRefEl) ? 'success' : 'default'}\r\n                    sx={{ position: 'relative' }}\r\n                    onClick={(e) => setEmojiRefEl(ele => ele ? null : e.currentTarget)}\r\n                >\r\n                    <SentimentVerySatisfiedOutlinedIcon />\r\n                </IconButton>\r\n                <Popper\r\n                    open={Boolean(emojiRefEl)}\r\n                    anchorEl={emojiRefEl}\r\n                    placement='top-start'\r\n                    sx={{ zIndex: 9999 }}\r\n                >\r\n                    <Icons setContent={setText} content={text} theme={theme} />\r\n                </Popper>\r\n\r\n                <button type=\"submit\" className=\"material-icons\"\r\n                    disabled={text ? false : true}>\r\n                    near_me\r\n                </button>\r\n            </form>\r\n        </Stack>\r\n    )\r\n}\r\n\r\nexport default RightSide\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}