{"ast":null,"code":"export const checkImage = file => {\n  let err = \"\";\n  if (!file) return err = \"File does not exist.\";\n  if (file.size > 1024 * 1024)\n    // 1mb\n    err = \"The largest image size is 1mb.\";\n  if (file.type !== 'image/jpeg' && file.type !== 'image/png') err = \"Image format is incorrect.\";\n  return err;\n};\nexport const imageUpload = async images => {\n  let imgArr = [];\n  for (const item of images) {\n    const formData = new FormData();\n    if (item.camera) {\n      formData.append(\"file\", item.camera);\n    } else {\n      formData.append(\"file\", item);\n    }\n    formData.append(\"upload_preset\", \"hogfaosc\");\n    formData.append(\"cloud_name\", \"dtyc1cdwi\");\n    const res = await fetch(\"https://api.cloudinary.com/v1_1/dtyc1cdwi/upload\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    imgArr.push({\n      public_id: data.public_id,\n      url: data.secure_url\n    });\n    console.log(data);\n  }\n  return imgArr;\n};","map":{"version":3,"names":["checkImage","file","err","size","type","imageUpload","images","imgArr","item","formData","FormData","camera","append","res","fetch","method","body","data","json","push","public_id","url","secure_url","console","log"],"sources":["D:/JoynetSocialNetwork/do-an-fe/src/utils/imageUpload.js"],"sourcesContent":["export const checkImage = (file) => {\r\n    let err = \"\"\r\n    if (!file) return err = \"File does not exist.\"\r\n\r\n    if (file.size > 1024 * 1024) // 1mb\r\n        err = \"The largest image size is 1mb.\"\r\n\r\n    if (file.type !== 'image/jpeg' && file.type !== 'image/png')\r\n        err = \"Image format is incorrect.\"\r\n\r\n    return err;\r\n}\r\n\r\n\r\nexport const imageUpload = async (images) => {\r\n    let imgArr = [];\r\n    for (const item of images) {\r\n        const formData = new FormData()\r\n        if (item.camera) {\r\n            formData.append(\"file\", item.camera)\r\n        } else {\r\n            formData.append(\"file\", item)\r\n        }\r\n\r\n        formData.append(\"upload_preset\", \"hogfaosc\")\r\n        formData.append(\"cloud_name\", \"dtyc1cdwi\")\r\n\r\n        const res = await fetch(\"https://api.cloudinary.com/v1_1/dtyc1cdwi/upload\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n\r\n        const data = await res.json()\r\n\r\n        imgArr.push({ public_id: data.public_id, url: data.secure_url })\r\n        console.log(data)\r\n    }\r\n    return imgArr;\r\n}"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,IAAI,IAAK;EAChC,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAI,CAACD,IAAI,EAAE,OAAOC,GAAG,GAAG,sBAAsB;EAE9C,IAAID,IAAI,CAACE,IAAI,GAAG,IAAI,GAAG,IAAI;IAAE;IACzBD,GAAG,GAAG,gCAAgC;EAE1C,IAAID,IAAI,CAACG,IAAI,KAAK,YAAY,IAAIH,IAAI,CAACG,IAAI,KAAK,WAAW,EACvDF,GAAG,GAAG,4BAA4B;EAEtC,OAAOA,GAAG;AACd,CAAC;AAGD,OAAO,MAAMG,WAAW,GAAG,MAAOC,MAAM,IAAK;EACzC,IAAIC,MAAM,GAAG,EAAE;EACf,KAAK,MAAMC,IAAI,IAAIF,MAAM,EAAE;IACvB,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/B,IAAIF,IAAI,CAACG,MAAM,EAAE;MACbF,QAAQ,CAACG,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAACG,MAAM,CAAC;IACxC,CAAC,MAAM;MACHF,QAAQ,CAACG,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;IACjC;IAEAC,QAAQ,CAACG,MAAM,CAAC,eAAe,EAAE,UAAU,CAAC;IAC5CH,QAAQ,CAACG,MAAM,CAAC,YAAY,EAAE,WAAW,CAAC;IAE1C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kDAAkD,EAAE;MACxEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEP;IACV,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;IAE7BX,MAAM,CAACY,IAAI,CAAC;MAAEC,SAAS,EAAEH,IAAI,CAACG,SAAS;MAAEC,GAAG,EAAEJ,IAAI,CAACK;IAAW,CAAC,CAAC;IAChEC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;EACrB;EACA,OAAOV,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module"}